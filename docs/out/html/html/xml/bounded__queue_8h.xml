<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="bounded__queue_8h" kind="file">
    <compoundname>bounded_queue.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">atomic</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">memory</includes>
    <includes refid="base_2macros_8h" local="yes">cyber/base/macros.h</includes>
    <includes refid="wait__strategy_8h" local="yes">cyber/base/wait_strategy.h</includes>
    <includedby refid="thread__pool_8h" local="yes">base/thread_pool.h</includedby>
    <includedby refid="perf__event__cache_8h" local="yes">event/perf_event_cache.h</includedby>
    <includedby refid="task__manager_8h" local="yes">task/task_manager.h</includedby>
    <includedby refid="timer__task_8h" local="yes">timer/timer_task.h</includedby>
    <includedby refid="timing__slot_8h" local="yes">timer/timing_slot.h</includedby>
    <includedby refid="timing__wheel_8h" local="yes">timer/timing_wheel.h</includedby>
    <incdepgraph>
      <node id="166">
        <label>atomic</label>
      </node>
      <node id="163">
        <label>stdint.h</label>
      </node>
      <node id="162">
        <label>base/bounded_queue.h</label>
        <link refid="bounded_queue.h"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>condition_variable</label>
      </node>
      <node id="164">
        <label>unistd.h</label>
      </node>
      <node id="171">
        <label>cyber/base/wait_strategy.h</label>
        <link refid="wait__strategy_8h"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>new</label>
      </node>
      <node id="167">
        <label>cstdlib</label>
      </node>
      <node id="174">
        <label>mutex</label>
      </node>
      <node id="172">
        <label>chrono</label>
      </node>
      <node id="175">
        <label>thread</label>
      </node>
      <node id="165">
        <label>algorithm</label>
      </node>
      <node id="169">
        <label>cyber/base/macros.h</label>
        <link refid="base_2macros_8h"/>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="185">
        <label>py_wrapper/py_timer.h</label>
        <link refid="py__timer_8h"/>
      </node>
      <node id="183">
        <label>py_wrapper/py_node.h</label>
        <link refid="py__node_8h"/>
      </node>
      <node id="201">
        <label>tools/cyber_recorder/player/player.h</label>
        <link refid="player_8h"/>
      </node>
      <node id="195">
        <label>blocker/intra_reader.h</label>
        <link refid="intra__reader_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>tools/cyber_monitor/general_message_base.h</label>
        <link refid="general__message__base_8h"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>examples/timer_component_example/timer_component_example.h</label>
        <link refid="timer__component__example_8h"/>
      </node>
      <node id="182">
        <label>py_wrapper/py_init.h</label>
        <link refid="py__init_8h"/>
      </node>
      <node id="190">
        <label>tools/cyber_recorder/recorder.h</label>
        <link refid="recorder_8h"/>
      </node>
      <node id="217">
        <label>tools/cyber_recorder/player/play_task.h</label>
        <link refid="play__task_8h"/>
        <childnode refid="218" relation="include">
        </childnode>
      </node>
      <node id="197">
        <label>node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>scheduler/scheduler.h</label>
        <link refid="scheduler_8h"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h"/>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>node/reader_base.h</label>
        <link refid="reader__base_8h"/>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>cyber.h</label>
        <link refid="cyber_8h"/>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="226">
        <label>data/fusion/all_latest.h</label>
        <link refid="all__latest_8h"/>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>parameter/parameter_client.h</label>
        <link refid="parameter__client_8h"/>
      </node>
      <node id="221">
        <label>scheduler/policy/scheduler_classic.h</label>
        <link refid="scheduler__classic_8h"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>croutine/routine_factory.h</label>
        <link refid="routine__factory_8h"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>base/thread_pool.h</label>
        <link refid="thread__pool_8h"/>
      </node>
      <node id="222">
        <label>data/data_notifier.h</label>
        <link refid="data__notifier_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>transport/transmitter/rtps_transmitter.h</label>
        <link refid="rtps__transmitter_8h"/>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="200">
        <label>tools/cyber_recorder/player/play_task_producer.h</label>
        <link refid="play__task__producer_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>base/bounded_queue.h</label>
        <link refid="bounded_queue.h"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>transport/transmitter/intra_transmitter.h</label>
        <link refid="intra__transmitter_8h"/>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>data/data_visitor_base.h</label>
        <link refid="data__visitor__base_8h"/>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>py_wrapper/py_topology_manager.h</label>
        <link refid="py__topology__manager_8h"/>
      </node>
      <node id="180">
        <label>component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>scheduler/scheduler_factory.h</label>
        <link refid="scheduler__factory_8h"/>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>data/data_dispatcher.h</label>
        <link refid="data__dispatcher_8h"/>
        <childnode refid="225" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>transport/receiver/hybrid_receiver.h</label>
        <link refid="hybrid__receiver_8h"/>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>node/node_service_impl.h</label>
        <link refid="node__service__impl_8h"/>
        <childnode refid="197" relation="include">
        </childnode>
      </node>
      <node id="236">
        <label>timer/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>tools/cyber_recorder/player/play_task_consumer.h</label>
        <link refid="play__task__consumer_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>parameter/parameter_server.h</label>
        <link refid="parameter__server_8h"/>
      </node>
      <node id="189">
        <label>tools/cyber_monitor/general_message.h</label>
        <link refid="general__message_8h"/>
      </node>
      <node id="193">
        <label>mainboard/module_controller.h</label>
        <link refid="module__controller_8h"/>
      </node>
      <node id="198">
        <label>component/component_base.h</label>
        <link refid="component__base_8h"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
      </node>
      <node id="210">
        <label>task/task_manager.h</label>
        <link refid="task__manager_8h"/>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>transport/transmitter/transmitter.h</label>
        <link refid="transmitter_8h"/>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="188">
        <label>tools/cyber_monitor/general_channel_message.h</label>
        <link refid="general__channel__message_8h"/>
      </node>
      <node id="178">
        <label>event/perf_event_cache.h</label>
        <link refid="perf__event__cache_8h"/>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="231">
        <label>transport/transmitter/shm_transmitter.h</label>
        <link refid="shm__transmitter_8h"/>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="215">
        <label>node/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>data/data_visitor.h</label>
        <link refid="data__visitor_8h"/>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="199">
        <label>component/timer_component.h</label>
        <link refid="timer__component_8h"/>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>timer/timer_manager.h</label>
        <link refid="timer__manager_8h"/>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>timer/timing_wheel.h</label>
        <link refid="timing__wheel_8h"/>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>node/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>service/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
      <node id="216">
        <label>blocker/intra_writer.h</label>
        <link refid="intra__writer_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>transport/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>examples/common_component_example/common_component_example.h</label>
        <link refid="common__component__example_8h"/>
      </node>
      <node id="233">
        <label>timer/timing_slot.h</label>
        <link refid="timing__slot_8h"/>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>transport/transmitter/hybrid_transmitter.h</label>
        <link refid="hybrid__transmitter_8h"/>
        <childnode refid="213" relation="include">
        </childnode>
      </node>
      <node id="223">
        <label>data/channel_buffer.h</label>
        <link refid="channel__buffer_8h"/>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>timer/timer_task.h</label>
        <link refid="timer__task_8h"/>
      </node>
      <node id="205">
        <label>service/service.h</label>
        <link refid="service_8h"/>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>scheduler/policy/scheduler_choreography.h</label>
        <link refid="scheduler__choreography_8h"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>task/task.h</label>
        <link refid="task_8h"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>py_wrapper/py_time.h</label>
        <link refid="py__time_8h"/>
      </node>
      <node id="218">
        <label>tools/cyber_recorder/player/play_task_buffer.h</label>
        <link refid="play__task__buffer_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue" prot="public">apollo::cyber::base::BoundedQueue</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1base">apollo::cyber::base</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_BASE_BOUNDED_QUEUE_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CYBER_BASE_BOUNDED_QUEUE_H_</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2macros_8h" kindref="compound">cyber/base/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wait__strategy_8h" kindref="compound">cyber/base/wait_strategy.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apollo<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cyber<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">base<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue" kindref="compound">BoundedQueue</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a7ed1030141bc62c66ce2c41b6bfdfa58" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structapollo_1_1cyber_1_1HandlePackage" kindref="compound">value_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="38" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a3e14c54e4e45f2c586432a976e455e84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a3e14c54e4e45f2c586432a976e455e84" kindref="member">size_type</ref><sp/>=<sp/>uint64_t;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1adfb504463c84df45f7331b3a5bc0b2dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1adfb504463c84df45f7331b3a5bc0b2dc" kindref="member">BoundedQueue</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue" kindref="compound">BoundedQueue</ref>&amp;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a58546812b4cf14dcefd0c7cbbb1f1ce7" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue" kindref="compound">BoundedQueue</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1adfb504463c84df45f7331b3a5bc0b2dc" kindref="member">BoundedQueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue" kindref="compound">BoundedQueue</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1afee156d51ff7a99b632018b323d081ea" kindref="member">~BoundedQueue</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ab533131fead9b6582000e8e36e25a16a" kindref="member">Init</ref>(uint64_t<sp/>size);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ab533131fead9b6582000e8e36e25a16a" kindref="member">Init</ref>(uint64_t<sp/>size,<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref>*<sp/>strategy);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1acd1f2d44c5ebeede766e1af9035aa9a9" kindref="member">Enqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>element);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1acd1f2d44c5ebeede766e1af9035aa9a9" kindref="member">Enqueue</ref>(T&amp;&amp;<sp/>element);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a71e93856645945df2895ce546ecac613" kindref="member">WaitEnqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>element);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a71e93856645945df2895ce546ecac613" kindref="member">WaitEnqueue</ref>(T&amp;&amp;<sp/>element);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ade44ba27167b91f52b7247f18ef7f1b4" kindref="member">Dequeue</ref>(T*<sp/>element);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ae83724056afdf4033566ec0d9d817717" kindref="member">WaitDequeue</ref>(T*<sp/>element);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a05e943aa86950fd3ed422cbd75e8a458" kindref="member">Size</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a7de0b45b5ea30ec7af76385baa2431b6" kindref="member">Empty</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ae7da6c10b79cfb65a1135b5a8502dadb" kindref="member">SetWaitStrategy</ref>(<ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref>*<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ad99770e53baaee283b6f1a8b94c6fe24" kindref="member">BreakAllWait</ref>();</highlight></codeline>
<codeline lineno="57" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a825734364aeb208103c337ac10af8f97" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a825734364aeb208103c337ac10af8f97" kindref="member">Head</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1afcb7d1df454d64b1b480caf678af1a10" kindref="member">head_</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="58" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a70d560976becd0eae0351bf62df5833f" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a70d560976becd0eae0351bf62df5833f" kindref="member">Tail</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a9b0101e530013d6587259b40a5937b2d" kindref="member">tail_</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="59" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a6da695b0d88188df69312d8b4c2fac9f" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a6da695b0d88188df69312d8b4c2fac9f" kindref="member">Commit</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a8ea7d0921f586ec3bbd616967fe7f5a3" kindref="member">commit_</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ad61a734caa076be4afc41fcc198d4922" kindref="member">GetIndex</ref>(uint64_t<sp/>num);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1afcb7d1df454d64b1b480caf678af1a10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(<ref refid="base_2macros_8h_1ae05da5eff6babaf91257a4accdf8e0b6" kindref="member">CACHELINE_SIZE</ref>)<sp/>std::atomic&lt;uint64_t&gt;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1afcb7d1df454d64b1b480caf678af1a10" kindref="member">head_</ref><sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="65" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a9b0101e530013d6587259b40a5937b2d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(<ref refid="base_2macros_8h_1ae05da5eff6babaf91257a4accdf8e0b6" kindref="member">CACHELINE_SIZE</ref>)<sp/>std::atomic&lt;uint64_t&gt;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a9b0101e530013d6587259b40a5937b2d" kindref="member">tail_</ref><sp/>=<sp/>{1};</highlight></codeline>
<codeline lineno="66" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a8ea7d0921f586ec3bbd616967fe7f5a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(<ref refid="base_2macros_8h_1ae05da5eff6babaf91257a4accdf8e0b6" kindref="member">CACHELINE_SIZE</ref>)<sp/>std::atomic&lt;uint64_t&gt;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a8ea7d0921f586ec3bbd616967fe7f5a3" kindref="member">commit_</ref><sp/>=<sp/>{1};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>alignas(CACHELINE_SIZE)<sp/>std::atomic&lt;uint64_t&gt;<sp/>size_<sp/>=<sp/>{0};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a05a534d5530191d523f8d5a976dbae31" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a05a534d5530191d523f8d5a976dbae31" kindref="member">pool_size_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ab7651509420fec29fb2f9fb013bd8df3" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ab7651509420fec29fb2f9fb013bd8df3" kindref="member">pool_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a123bf235b77d2927e4319b0ceb3dc45c" refkind="member"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;WaitStrategy&gt;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a123bf235b77d2927e4319b0ceb3dc45c" kindref="member">wait_strategy_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a750b9ec4961d2e4da6b97cd79d866292" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a750b9ec4961d2e4da6b97cd79d866292" kindref="member">break_all_wait_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="75" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1afee156d51ff7a99b632018b323d081ea" refkind="member"><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1afee156d51ff7a99b632018b323d081ea" kindref="member">BoundedQueue&lt;T&gt;::~BoundedQueue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_strategy_)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>BreakAllWait();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pool_size_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pool_[i].~T();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::free(pool_);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ab533131fead9b6582000e8e36e25a16a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ab533131fead9b6582000e8e36e25a16a" kindref="member">BoundedQueue&lt;T&gt;::Init</ref>(uint64_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1a2d055a81b338116634deaf8ac3367aca" kindref="member">Init</ref>(size,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy" kindref="compound">SleepWaitStrategy</ref>());</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="93" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a251cc10b72fdccbdc7afea437268d5aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ab533131fead9b6582000e8e36e25a16a" kindref="member">BoundedQueue&lt;T&gt;::Init</ref>(uint64_t<sp/>size,<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref>*<sp/>strategy)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Head<sp/>and<sp/>tail<sp/>each<sp/>occupy<sp/>a<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>pool_size_<sp/>=<sp/>size<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>pool_<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::calloc(pool_size_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pool_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint64_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pool_size_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;(pool_[i]))<sp/>T();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>wait_strategy_.reset(strategy);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="108" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1acd1f2d44c5ebeede766e1af9035aa9a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1acd1f2d44c5ebeede766e1af9035aa9a9" kindref="member">BoundedQueue&lt;T&gt;::Enqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>uint64_t<sp/>new_tail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>uint64_t<sp/>old_commit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>uint64_t<sp/>old_tail<sp/>=<sp/>tail_.load(std::memory_order_acquire);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>new_tail<sp/>=<sp/>old_tail<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetIndex(new_tail)<sp/>==<sp/>GetIndex(head_.load(std::memory_order_acquire)))<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!tail_.compare_exchange_weak(old_tail,<sp/>new_tail,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_acq_rel,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_relaxed));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>pool_[GetIndex(old_tail)]<sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>old_commit<sp/>=<sp/>old_tail;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="base_2macros_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(!commit_.compare_exchange_weak(old_commit,<sp/>new_tail,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_acq_rel,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_relaxed)));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>wait_strategy_-&gt;NotifyOne();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="131" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1afac8fe0282970f47d94cf042f1b0229b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1acd1f2d44c5ebeede766e1af9035aa9a9" kindref="member">BoundedQueue&lt;T&gt;::Enqueue</ref>(T&amp;&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>uint64_t<sp/>new_tail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>uint64_t<sp/>old_commit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>uint64_t<sp/>old_tail<sp/>=<sp/>tail_.load(std::memory_order_acquire);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>new_tail<sp/>=<sp/>old_tail<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetIndex(new_tail)<sp/>==<sp/>GetIndex(head_.load(std::memory_order_acquire)))<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!tail_.compare_exchange_weak(old_tail,<sp/>new_tail,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_acq_rel,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_relaxed));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>pool_[GetIndex(old_tail)]<sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>old_commit<sp/>=<sp/>old_tail;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="base_2macros_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(!commit_.compare_exchange_weak(old_commit,<sp/>new_tail,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_acq_rel,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_relaxed)));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>wait_strategy_-&gt;NotifyOne();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="154" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ade44ba27167b91f52b7247f18ef7f1b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ade44ba27167b91f52b7247f18ef7f1b4" kindref="member">BoundedQueue&lt;T&gt;::Dequeue</ref>(T*<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>uint64_t<sp/>new_head<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>uint64_t<sp/>old_head<sp/>=<sp/>head_.load(std::memory_order_acquire);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>new_head<sp/>=<sp/>old_head<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_head<sp/>==<sp/>commit_.load(std::memory_order_acquire))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>*element<sp/>=<sp/>pool_[GetIndex(new_head)];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!head_.compare_exchange_weak(old_head,<sp/>new_head,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_acq_rel,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memory_order_relaxed));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="170" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a71e93856645945df2895ce546ecac613" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a71e93856645945df2895ce546ecac613" kindref="member">BoundedQueue&lt;T&gt;::WaitEnqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!break_all_wait_)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Enqueue(element))<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_strategy_-&gt;EmptyWait())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="186" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a564154e9448d98d2843aa5cfc1cf2f5e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a71e93856645945df2895ce546ecac613" kindref="member">BoundedQueue&lt;T&gt;::WaitEnqueue</ref>(T&amp;&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!break_all_wait_)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Enqueue(element))<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_strategy_-&gt;EmptyWait())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="202" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ae83724056afdf4033566ec0d9d817717" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ae83724056afdf4033566ec0d9d817717" kindref="member">BoundedQueue&lt;T&gt;::WaitDequeue</ref>(T*<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!break_all_wait_)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Dequeue(element))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wait_strategy_-&gt;EmptyWait())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="218" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a05e943aa86950fd3ed422cbd75e8a458" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a05e943aa86950fd3ed422cbd75e8a458" kindref="member">BoundedQueue&lt;T&gt;::Size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tail_<sp/>-<sp/>head_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="223" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a7de0b45b5ea30ec7af76385baa2431b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1a7de0b45b5ea30ec7af76385baa2431b6" kindref="member">BoundedQueue&lt;T&gt;::Empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Size()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="228" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ad61a734caa076be4afc41fcc198d4922" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ad61a734caa076be4afc41fcc198d4922" kindref="member">BoundedQueue&lt;T&gt;::GetIndex</ref>(uint64_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num<sp/>-<sp/>(num<sp/>/<sp/>pool_size_)<sp/>*<sp/>pool_size_;<sp/><sp/></highlight><highlight class="comment">//<sp/>faster<sp/>than<sp/>%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="233" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ae7da6c10b79cfb65a1135b5a8502dadb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ae7da6c10b79cfb65a1135b5a8502dadb" kindref="member">BoundedQueue&lt;T&gt;::SetWaitStrategy</ref>(<ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref>*<sp/>strategy)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>wait_strategy_.reset(strategy);</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="238" refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ad99770e53baaee283b6f1a8b94c6fe24" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BoundedQueue_1ad99770e53baaee283b6f1a8b94c6fe24" kindref="member">BoundedQueue&lt;T&gt;::BreakAllWait</ref>()<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>break_all_wait_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>wait_strategy_-&gt;BreakAllWait();</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_BASE_BOUNDED_QUEUE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/base/bounded_queue.h"/>
  </compounddef>
</doxygen>
