<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class__loader__utility_8h" kind="file">
    <compoundname>class_loader_utility.h</compoundname>
    <includes local="no">Poco/SharedLibrary.h</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">string</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes refid="class__factory_8h" local="yes">cyber/class_loader/utility/class_factory.h</includes>
    <includes refid="log_8h" local="yes">cyber/common/log.h</includes>
    <includedby refid="class__loader__register__macro_8h" local="yes">class_loader/class_loader_register_macro.h</includedby>
    <incdepgraph>
      <node id="1445">
        <label>class_loader/utility/class_loader_utility.h</label>
        <link refid="class_loader_utility.h"/>
        <childnode refid="1446" relation="include">
        </childnode>
        <childnode refid="1447" relation="include">
        </childnode>
        <childnode refid="1448" relation="include">
        </childnode>
        <childnode refid="1449" relation="include">
        </childnode>
        <childnode refid="1450" relation="include">
        </childnode>
        <childnode refid="1451" relation="include">
        </childnode>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1454" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
        <childnode refid="1456" relation="include">
        </childnode>
        <childnode refid="1457" relation="include">
        </childnode>
      </node>
      <node id="1458">
        <label>stdarg.h</label>
      </node>
      <node id="1456">
        <label>cyber/class_loader/utility/class_factory.h</label>
        <link refid="class__factory_8h"/>
        <childnode refid="1452" relation="include">
        </childnode>
        <childnode refid="1453" relation="include">
        </childnode>
        <childnode refid="1455" relation="include">
        </childnode>
      </node>
      <node id="1459">
        <label>cyber/binary.h</label>
        <link refid="binary_8h"/>
        <childnode refid="1452" relation="include">
        </childnode>
      </node>
      <node id="1460">
        <label>glog/logging.h</label>
      </node>
      <node id="1447">
        <label>cassert</label>
      </node>
      <node id="1446">
        <label>Poco/SharedLibrary.h</label>
      </node>
      <node id="1452">
        <label>string</label>
      </node>
      <node id="1449">
        <label>map</label>
      </node>
      <node id="1453">
        <label>typeinfo</label>
      </node>
      <node id="1448">
        <label>cstdio</label>
      </node>
      <node id="1455">
        <label>vector</label>
      </node>
      <node id="1457">
        <label>cyber/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="1458" relation="include">
        </childnode>
        <childnode refid="1459" relation="include">
        </childnode>
        <childnode refid="1460" relation="include">
        </childnode>
        <childnode refid="1461" relation="include">
        </childnode>
      </node>
      <node id="1454">
        <label>utility</label>
      </node>
      <node id="1451">
        <label>mutex</label>
      </node>
      <node id="1461">
        <label>glog/raw_logging.h</label>
      </node>
      <node id="1450">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1462">
        <label>class_loader/utility/class_loader_utility.h</label>
        <link refid="class_loader_utility.h"/>
        <childnode refid="1463" relation="include">
        </childnode>
      </node>
      <node id="1464">
        <label>class_loader/class_loader.h</label>
        <link refid="class__loader_8h"/>
        <childnode refid="1465" relation="include">
        </childnode>
        <childnode refid="1467" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
      </node>
      <node id="1473">
        <label>py_wrapper/py_timer.h</label>
        <link refid="py__timer_8h"/>
      </node>
      <node id="1471">
        <label>py_wrapper/py_node.h</label>
        <link refid="py__node_8h"/>
      </node>
      <node id="1475">
        <label>tools/cyber_monitor/general_message_base.h</label>
        <link refid="general__message__base_8h"/>
        <childnode refid="1476" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
      </node>
      <node id="1480">
        <label>examples/timer_component_example/timer_component_example.h</label>
        <link refid="timer__component__example_8h"/>
      </node>
      <node id="1470">
        <label>py_wrapper/py_init.h</label>
        <link refid="py__init_8h"/>
      </node>
      <node id="1478">
        <label>tools/cyber_recorder/recorder.h</label>
        <link refid="recorder_8h"/>
      </node>
      <node id="1469">
        <label>cyber.h</label>
        <link refid="cyber_8h"/>
        <childnode refid="1470" relation="include">
        </childnode>
        <childnode refid="1471" relation="include">
        </childnode>
        <childnode refid="1472" relation="include">
        </childnode>
        <childnode refid="1473" relation="include">
        </childnode>
        <childnode refid="1474" relation="include">
        </childnode>
        <childnode refid="1475" relation="include">
        </childnode>
        <childnode refid="1477" relation="include">
        </childnode>
        <childnode refid="1478" relation="include">
        </childnode>
      </node>
      <node id="1474">
        <label>py_wrapper/py_topology_manager.h</label>
        <link refid="py__topology__manager_8h"/>
      </node>
      <node id="1468">
        <label>component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="1469" relation="include">
        </childnode>
        <childnode refid="1479" relation="include">
        </childnode>
        <childnode refid="1480" relation="include">
        </childnode>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1477">
        <label>tools/cyber_monitor/general_message.h</label>
        <link refid="general__message_8h"/>
      </node>
      <node id="1466">
        <label>mainboard/module_controller.h</label>
        <link refid="module__controller_8h"/>
      </node>
      <node id="1467">
        <label>component/component_base.h</label>
        <link refid="component__base_8h"/>
        <childnode refid="1468" relation="include">
        </childnode>
        <childnode refid="1481" relation="include">
        </childnode>
      </node>
      <node id="1476">
        <label>tools/cyber_monitor/general_channel_message.h</label>
        <link refid="general__channel__message_8h"/>
      </node>
      <node id="1481">
        <label>component/timer_component.h</label>
        <link refid="timer__component_8h"/>
        <childnode refid="1480" relation="include">
        </childnode>
      </node>
      <node id="1465">
        <label>class_loader/class_loader_manager.h</label>
        <link refid="class__loader__manager_8h"/>
        <childnode refid="1466" relation="include">
        </childnode>
      </node>
      <node id="1463">
        <label>class_loader/class_loader_register_macro.h</label>
        <link refid="class__loader__register__macro_8h"/>
        <childnode refid="1464" relation="include">
        </childnode>
      </node>
      <node id="1479">
        <label>examples/common_component_example/common_component_example.h</label>
        <link refid="common__component__example_8h"/>
      </node>
      <node id="1472">
        <label>py_wrapper/py_time.h</label>
        <link refid="py__time_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1class__loader">apollo::cyber::class_loader</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility">apollo::cyber::class_loader::utility</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_CLASS_LOADER_CLASS_LOADER_UTILITY_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CYBER_CLASS_LOADER_CLASS_LOADER_UTILITY_H_</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Poco/SharedLibrary.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__factory_8h" kindref="compound">cyber/class_loader/utility/class_factory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="log_8h" kindref="compound">cyber/common/log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apollo<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cyber<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">class_loader<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ClassLoader;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">utility<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1abe591df068142cddd76a66dd4f8277e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1abe591df068142cddd76a66dd4f8277e7" kindref="member">PocoLibraryPtr</ref><sp/>=<sp/>std::shared_ptr&lt;Poco::SharedLibrary&gt;;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" kindref="member">ClassClassFactoryMap</ref><sp/>=</highlight></codeline>
<codeline lineno="47" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>utility::AbstractClassFactoryBase*&gt;;</highlight></codeline>
<codeline lineno="48" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1af56a53fd55c852ce98e9135bdff04cbc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1af56a53fd55c852ce98e9135bdff04cbc" kindref="member">BaseToClassFactoryMapMap</ref><sp/>=<sp/>std::map&lt;std::string,<sp/>ClassClassFactoryMap&gt;;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a1cb3907890434c1bb35adf496751b6f7" kindref="member">LibpathPocolibVector</ref><sp/>=</highlight></codeline>
<codeline lineno="50" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a1cb3907890434c1bb35adf496751b6f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;std::string,<sp/>PocoLibraryPtr&gt;&gt;;</highlight></codeline>
<codeline lineno="51" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1acb2be87bf5f4284e4ea493f4238073dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1acb2be87bf5f4284e4ea493f4238073dc" kindref="member">ClassFactoryVector</ref><sp/>=<sp/>std::vector&lt;AbstractClassFactoryBase*&gt;;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1af56a53fd55c852ce98e9135bdff04cbc" kindref="member">BaseToClassFactoryMapMap</ref>&amp;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ade8889a69d96abbc160abfb961e06e14" kindref="member">GetClassFactoryMapMap</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">std::recursive_mutex&amp;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac0762a456bf03c261dac3cbb887e766c" kindref="member">GetClassFactoryMapMapMutex</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a1cb3907890434c1bb35adf496751b6f7" kindref="member">LibpathPocolibVector</ref>&amp;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a7dd12e52ce22601d5745df656d76d971" kindref="member">GetLibPathPocoShareLibVector</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">std::recursive_mutex&amp;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac8ee63237d0ab29b318b85bb94578d4c" kindref="member">GetLibPathPocoShareLibMutex</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" kindref="member">ClassClassFactoryMap</ref>&amp;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ae1fdfff70d24016decbc228c3154ca71" kindref="member">GetClassFactoryMapByBaseClass</ref>(</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>typeid_base_class_name);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">std::string<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5014c48715c314eb5f834c9757ae22b5" kindref="member">GetCurLoadingLibraryName</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a9a6ff61f249d956b25d4534d24bd51eb" kindref="member">SetCurLoadingLibraryName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>library_name);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1aeee0d4fa36114f12c222715f07314fa4" kindref="member">GetCurActiveClassLoader</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a88712dc69a4b979a0e6d45c27ae023df" kindref="member">SetCurActiveClassLoader</ref>(<ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a88f5efcdbb427a9fdacd391c21ba807b" kindref="member">IsLibraryLoaded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>library_path,<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a699f7658f6d62a8d2a9427dbb2141873" kindref="member">IsLibraryLoadedByAnybody</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>library_path);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a656284cd0c26b5728ff519bb67d3b830" kindref="member">LoadLibrary</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>library_path,<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a94aadacc8880f1c0d157d0294fe00b32" kindref="member">UnloadLibrary</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>library_path,<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a097070a23abf68916e625fdfe817f5a1" kindref="member">RegisterClass</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>base_class_name);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">Base*<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a830e6d047a7b482ce10ab64efb4e6470" kindref="member">CreateClassObj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name,<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5cbc89db3b5172482c7a38d06739fa1b" kindref="member">GetValidClassNames</ref>(<ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="76" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a097070a23abf68916e625fdfe817f5a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a097070a23abf68916e625fdfe817f5a1" kindref="member">RegisterClass</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>base_class_name)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="log_8h_1af1a972c64154fbc2f9b56766c89add01" kindref="member">AINFO</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;registerclass:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>class_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>base_class_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5014c48715c314eb5f834c9757ae22b5" kindref="member">GetCurLoadingLibraryName</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactory" kindref="compound">utility::AbstractClassFactory&lt;Base&gt;</ref>*<sp/>new_class_factrory_obj<sp/>=</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1ClassFactory" kindref="compound">utility::ClassFactory&lt;Derived, Base&gt;</ref>(class_name,<sp/>base_class_name);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>new_class_factrory_obj-&gt;<ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase_1a72444d8d01b94d17b8b1782bb6073872" kindref="member">AddOwnedClassLoader</ref>(<ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1aeee0d4fa36114f12c222715f07314fa4" kindref="member">GetCurActiveClassLoader</ref>());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>new_class_factrory_obj-&gt;<ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase_1a55d911877a8e8586d93abbdd90329d6f" kindref="member">SetRelativeLibraryPath</ref>(<ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5014c48715c314eb5f834c9757ae22b5" kindref="member">GetCurLoadingLibraryName</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac0762a456bf03c261dac3cbb887e766c" kindref="member">GetClassFactoryMapMapMutex</ref>().lock();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" kindref="member">ClassClassFactoryMap</ref>&amp;<sp/>factory_map<sp/>=</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ae1fdfff70d24016decbc228c3154ca71" kindref="member">GetClassFactoryMapByBaseClass</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(Base).name());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>factory_map[class_name]<sp/>=<sp/>new_class_factrory_obj;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac0762a456bf03c261dac3cbb887e766c" kindref="member">GetClassFactoryMapMapMutex</ref>().unlock();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="94" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a830e6d047a7b482ce10ab64efb4e6470" refkind="member"><highlight class="normal">Base*<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a830e6d047a7b482ce10ab64efb4e6470" kindref="member">CreateClassObj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name,<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac0762a456bf03c261dac3cbb887e766c" kindref="member">GetClassFactoryMapMapMutex</ref>().lock();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" kindref="member">ClassClassFactoryMap</ref>&amp;<sp/>factoryMap<sp/>=</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ae1fdfff70d24016decbc228c3154ca71" kindref="member">GetClassFactoryMapByBaseClass</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(Base).name());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactory" kindref="compound">AbstractClassFactory&lt;Base&gt;</ref>*<sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factoryMap.find(class_name)<sp/>!=<sp/>factoryMap.end())<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>factory<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactory" kindref="compound">utility::AbstractClassFactory&lt;Base&gt;</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factoryMap[class_name]);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac0762a456bf03c261dac3cbb887e766c" kindref="member">GetClassFactoryMapMapMutex</ref>().unlock();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>Base*<sp/>classobj<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factory<sp/>&amp;&amp;<sp/>factory-&gt;<ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase_1ae1471153574b83c4f4205c6ad55174c6" kindref="member">IsOwnedBy</ref>(loader))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>classobj<sp/>=<sp/>factory-&gt;<ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactory_1ae603a03f06c93b5f0475e63a0f2a9402" kindref="member">CreateObj</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>classobj;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="114" refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5cbc89db3b5172482c7a38d06739fa1b" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5cbc89db3b5172482c7a38d06739fa1b" kindref="member">GetValidClassNames</ref>(<ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref>*<sp/>loader)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lck(<ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac0762a456bf03c261dac3cbb887e766c" kindref="member">GetClassFactoryMapMapMutex</ref>());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" kindref="member">ClassClassFactoryMap</ref>&amp;<sp/>factoryMap<sp/>=</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ae1fdfff70d24016decbc228c3154ca71" kindref="member">GetClassFactoryMapByBaseClass</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(Base).name());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>classes;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>class_factory<sp/>:<sp/>factoryMap)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase" kindref="compound">AbstractClassFactoryBase</ref>*<sp/>factory<sp/>=<sp/>class_factory.second;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factory<sp/>&amp;&amp;<sp/>factory-&gt;<ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase_1ae1471153574b83c4f4205c6ad55174c6" kindref="member">IsOwnedBy</ref>(loader))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classes.emplace_back(class_factory.first);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>classes;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>utility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>namespace<sp/>class_loader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_CLASS_LOADER_CLASS_LOADER_UTILITY_H_</highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h"/>
  </compounddef>
</doxygen>
