<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class__loader_8h" kind="file">
    <compoundname>class_loader.h</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="class__loader__register__macro_8h" local="yes">cyber/class_loader/class_loader_register_macro.h</includes>
    <includedby refid="class__loader__manager_8h" local="yes">class_loader/class_loader_manager.h</includedby>
    <includedby refid="component__base_8h" local="yes">component/component_base.h</includedby>
    <includedby refid="common__component__example_8h" local="yes">examples/common_component_example/common_component_example.h</includedby>
    <includedby refid="timer__component__example_8h" local="yes">examples/timer_component_example/timer_component_example.h</includedby>
    <incdepgraph>
      <node id="1328">
        <label>cyber/class_loader/utility/class_loader_utility.h</label>
        <link refid="class__loader__utility_8h"/>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1330" relation="include">
        </childnode>
        <childnode refid="1331" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1333" relation="include">
        </childnode>
        <childnode refid="1334" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
      </node>
      <node id="1320">
        <label>class_loader/class_loader.h</label>
        <link refid="class_loader.h"/>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
      </node>
      <node id="1337">
        <label>stdarg.h</label>
      </node>
      <node id="1322">
        <label>functional</label>
      </node>
      <node id="1335">
        <label>cyber/class_loader/utility/class_factory.h</label>
        <link refid="class__factory_8h"/>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1333" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
      </node>
      <node id="1338">
        <label>cyber/binary.h</label>
        <link refid="binary_8h"/>
        <childnode refid="1325" relation="include">
        </childnode>
      </node>
      <node id="1339">
        <label>glog/logging.h</label>
      </node>
      <node id="1330">
        <label>cassert</label>
      </node>
      <node id="1329">
        <label>Poco/SharedLibrary.h</label>
      </node>
      <node id="1325">
        <label>string</label>
      </node>
      <node id="1332">
        <label>map</label>
      </node>
      <node id="1333">
        <label>typeinfo</label>
      </node>
      <node id="1331">
        <label>cstdio</label>
      </node>
      <node id="1326">
        <label>vector</label>
      </node>
      <node id="1336">
        <label>cyber/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="1337" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1339" relation="include">
        </childnode>
        <childnode refid="1340" relation="include">
        </childnode>
      </node>
      <node id="1334">
        <label>utility</label>
      </node>
      <node id="1324">
        <label>mutex</label>
      </node>
      <node id="1340">
        <label>glog/raw_logging.h</label>
      </node>
      <node id="1327">
        <label>cyber/class_loader/class_loader_register_macro.h</label>
        <link refid="class__loader__register__macro_8h"/>
        <childnode refid="1328" relation="include">
        </childnode>
      </node>
      <node id="1321">
        <label>algorithm</label>
      </node>
      <node id="1323">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1341">
        <label>class_loader/class_loader.h</label>
        <link refid="class_loader.h"/>
        <childnode refid="1342" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
        <childnode refid="1357" relation="include">
        </childnode>
      </node>
      <node id="1350">
        <label>py_wrapper/py_timer.h</label>
        <link refid="py__timer_8h"/>
      </node>
      <node id="1348">
        <label>py_wrapper/py_node.h</label>
        <link refid="py__node_8h"/>
      </node>
      <node id="1352">
        <label>tools/cyber_monitor/general_message_base.h</label>
        <link refid="general__message__base_8h"/>
        <childnode refid="1353" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
      </node>
      <node id="1357">
        <label>examples/timer_component_example/timer_component_example.h</label>
        <link refid="timer__component__example_8h"/>
      </node>
      <node id="1347">
        <label>py_wrapper/py_init.h</label>
        <link refid="py__init_8h"/>
      </node>
      <node id="1355">
        <label>tools/cyber_recorder/recorder.h</label>
        <link refid="recorder_8h"/>
      </node>
      <node id="1346">
        <label>cyber.h</label>
        <link refid="cyber_8h"/>
        <childnode refid="1347" relation="include">
        </childnode>
        <childnode refid="1348" relation="include">
        </childnode>
        <childnode refid="1349" relation="include">
        </childnode>
        <childnode refid="1350" relation="include">
        </childnode>
        <childnode refid="1351" relation="include">
        </childnode>
        <childnode refid="1352" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1355" relation="include">
        </childnode>
      </node>
      <node id="1351">
        <label>py_wrapper/py_topology_manager.h</label>
        <link refid="py__topology__manager_8h"/>
      </node>
      <node id="1345">
        <label>component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="1346" relation="include">
        </childnode>
        <childnode refid="1356" relation="include">
        </childnode>
        <childnode refid="1357" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
      </node>
      <node id="1354">
        <label>tools/cyber_monitor/general_message.h</label>
        <link refid="general__message_8h"/>
      </node>
      <node id="1343">
        <label>mainboard/module_controller.h</label>
        <link refid="module__controller_8h"/>
      </node>
      <node id="1344">
        <label>component/component_base.h</label>
        <link refid="component__base_8h"/>
        <childnode refid="1345" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
      </node>
      <node id="1353">
        <label>tools/cyber_monitor/general_channel_message.h</label>
        <link refid="general__channel__message_8h"/>
      </node>
      <node id="1358">
        <label>component/timer_component.h</label>
        <link refid="timer__component_8h"/>
        <childnode refid="1357" relation="include">
        </childnode>
      </node>
      <node id="1342">
        <label>class_loader/class_loader_manager.h</label>
        <link refid="class__loader__manager_8h"/>
        <childnode refid="1343" relation="include">
        </childnode>
      </node>
      <node id="1356">
        <label>examples/common_component_example/common_component_example.h</label>
        <link refid="common__component__example_8h"/>
      </node>
      <node id="1349">
        <label>py_wrapper/py_time.h</label>
        <link refid="py__time_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" prot="public">apollo::cyber::class_loader::ClassLoader</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1class__loader">apollo::cyber::class_loader</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_CLASS_LOADER_CLASS_LOADER_H_</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CYBER_CLASS_LOADER_CLASS_LOADER_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="class__loader__register__macro_8h" kindref="compound">cyber/class_loader/class_loader_register_macro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apollo<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cyber<sp/>{</highlight></codeline>
<codeline lineno="30" refid="namespaceapollo_1_1cyber_1_1class__loader" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">class_loader<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1ae563608511e63fade96914581cf30f26" kindref="member">ClassLoader</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>library_path);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a55141d6d041e0f3ac3b304a75c5e3e8f" kindref="member">~ClassLoader</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a68a84173ef3e6be8efc2608fe9904bb4" kindref="member">IsLibraryLoaded</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a1a3b7f75f4f52cc1e187404bac779283" kindref="member">LoadLibrary</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1ad255edf388b7bbb53701e68807ab4295" kindref="member">UnloadLibrary</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a1600e6d8a1841af3214505fc953f07e8" kindref="member">GetLibraryPath</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a43103c22c08798fce3eaa7263e608e9d" kindref="member">GetValidClassNames</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Base&gt;<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1ad869f2d0f2933e13b2e7765785287e41" kindref="member">CreateClassObj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a9717e7566534e5395b3d3b8d4229f473" kindref="member">IsClassValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a779fe6d14fe1b895383bddfb260593f1" kindref="member">OnClassObjDeleter</ref>(Base*<sp/>obj);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1ac2ce35233a9866b5ed83180b23ce6e16" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1ac2ce35233a9866b5ed83180b23ce6e16" kindref="member">library_path_</ref>;</highlight></codeline>
<codeline lineno="57" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1aa60b8b3da81bcfb874e6c5202522409f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1aa60b8b3da81bcfb874e6c5202522409f" kindref="member">loadlib_ref_count_</ref>;</highlight></codeline>
<codeline lineno="58" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1adb3ba15dcff9f555885bcaf4be5f737d" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1adb3ba15dcff9f555885bcaf4be5f737d" kindref="member">loadlib_ref_count_mutex_</ref>;</highlight></codeline>
<codeline lineno="59" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1affd77449c6ff1c46e459d3e9c696ea7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1affd77449c6ff1c46e459d3e9c696ea7e" kindref="member">classobj_ref_count_</ref>;</highlight></codeline>
<codeline lineno="60" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1af1ecab3d122a58aedea2029ca95a29ba" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1af1ecab3d122a58aedea2029ca95a29ba" kindref="member">classobj_ref_count_mutex_</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="64" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a43103c22c08798fce3eaa7263e608e9d" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a43103c22c08798fce3eaa7263e608e9d" kindref="member">ClassLoader::GetValidClassNames</ref>()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(utility::GetValidClassNames&lt;Base&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="69" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a9717e7566534e5395b3d3b8d4229f473" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a9717e7566534e5395b3d3b8d4229f473" kindref="member">ClassLoader::IsClassValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>valid_classes<sp/>=<sp/>GetValidClassNames&lt;Base&gt;();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::find(valid_classes.begin(),<sp/>valid_classes.end(),<sp/>class_name)<sp/>!=</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_classes.end());</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="76" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1ad869f2d0f2933e13b2e7765785287e41" refkind="member"><highlight class="normal">std::shared_ptr&lt;Base&gt;<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1ad869f2d0f2933e13b2e7765785287e41" kindref="member">ClassLoader::CreateClassObj</ref>(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>class_name)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a68a84173ef3e6be8efc2608fe9904bb4" kindref="member">IsLibraryLoaded</ref>())<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a1a3b7f75f4f52cc1e187404bac779283" kindref="member">LoadLibrary</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>Base*<sp/>class_object<sp/>=<sp/>utility::CreateClassObj&lt;Base&gt;(class_name,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>==<sp/>class_object)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="log_8h_1af620ea1a7c081ef231428d61fb6eb0b9" kindref="member">AWARN</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CreateClassObj<sp/>failed,<sp/>ensure<sp/>class<sp/>has<sp/>been<sp/>registered.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;classname:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>class_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,lib:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a1600e6d8a1841af3214505fc953f07e8" kindref="member">GetLibraryPath</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Base&gt;();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lck(<ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1af1ecab3d122a58aedea2029ca95a29ba" kindref="member">classobj_ref_count_mutex_</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1affd77449c6ff1c46e459d3e9c696ea7e" kindref="member">classobj_ref_count_</ref><sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1affd77449c6ff1c46e459d3e9c696ea7e" kindref="member">classobj_ref_count_</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Base&gt;<sp/>classObjSharePtr(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>class_object,<sp/>std::bind(&amp;ClassLoader::OnClassObjDeleter&lt;Base&gt;,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::placeholders::_1));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>classObjSharePtr;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base&gt;</highlight></codeline>
<codeline lineno="98" refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a779fe6d14fe1b895383bddfb260593f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1a779fe6d14fe1b895383bddfb260593f1" kindref="member">ClassLoader::OnClassObjDeleter</ref>(Base*<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>==<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lck(<ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1af1ecab3d122a58aedea2029ca95a29ba" kindref="member">classobj_ref_count_mutex_</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1affd77449c6ff1c46e459d3e9c696ea7e" kindref="member">classobj_ref_count_</ref><sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader_1affd77449c6ff1c46e459d3e9c696ea7e" kindref="member">classobj_ref_count_</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>class_loader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_CLASS_LOADER_CLASS_LOADER_H_</highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/class_loader/class_loader.h"/>
  </compounddef>
</doxygen>
