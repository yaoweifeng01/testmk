<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility" kind="namespace">
    <compoundname>apollo::cyber::class_loader::utility</compoundname>
    <innerclass refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase" prot="public">apollo::cyber::class_loader::utility::AbstractClassFactoryBase</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactory" prot="public">apollo::cyber::class_loader::utility::AbstractClassFactory</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1ClassFactory" prot="public">apollo::cyber::class_loader::utility::ClassFactory</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1abe591df068142cddd76a66dd4f8277e7" prot="public" static="no">
        <type>std::shared_ptr&lt; Poco::SharedLibrary &gt;</type>
        <definition>using apollo::cyber::class_loader::utility::PocoLibraryPtr = typedef std::shared_ptr&lt;Poco::SharedLibrary&gt;</definition>
        <argsstring></argsstring>
        <name>PocoLibraryPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="45" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase" kindref="compound">utility::AbstractClassFactoryBase</ref> * &gt;</type>
        <definition>using apollo::cyber::class_loader::utility::ClassClassFactoryMap = typedef std::map&lt;std::string, utility::AbstractClassFactoryBase*&gt;</definition>
        <argsstring></argsstring>
        <name>ClassClassFactoryMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="46" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1af56a53fd55c852ce98e9135bdff04cbc" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" kindref="member">ClassClassFactoryMap</ref> &gt;</type>
        <definition>using apollo::cyber::class_loader::utility::BaseToClassFactoryMapMap = typedef std::map&lt;std::string, ClassClassFactoryMap&gt;</definition>
        <argsstring></argsstring>
        <name>BaseToClassFactoryMapMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="48" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a1cb3907890434c1bb35adf496751b6f7" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; std::string, <ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1abe591df068142cddd76a66dd4f8277e7" kindref="member">PocoLibraryPtr</ref> &gt;&gt;</type>
        <definition>using apollo::cyber::class_loader::utility::LibpathPocolibVector = typedef std::vector&lt;std::pair&lt;std::string, PocoLibraryPtr&gt;&gt;</definition>
        <argsstring></argsstring>
        <name>LibpathPocolibVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="49" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1acb2be87bf5f4284e4ea493f4238073dc" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classapollo_1_1cyber_1_1class__loader_1_1utility_1_1AbstractClassFactoryBase" kindref="compound">AbstractClassFactoryBase</ref> * &gt;</type>
        <definition>using apollo::cyber::class_loader::utility::ClassFactoryVector = typedef std::vector&lt;AbstractClassFactoryBase*&gt;</definition>
        <argsstring></argsstring>
        <name>ClassFactoryVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="51" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ade8889a69d96abbc160abfb961e06e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1af56a53fd55c852ce98e9135bdff04cbc" kindref="member">BaseToClassFactoryMapMap</ref> &amp;</type>
        <definition>BaseToClassFactoryMapMap&amp; apollo::cyber::class_loader::utility::GetClassFactoryMapMap</definition>
        <argsstring>()</argsstring>
        <name>GetClassFactoryMapMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac0762a456bf03c261dac3cbb887e766c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::recursive_mutex &amp;</type>
        <definition>std::recursive_mutex&amp; apollo::cyber::class_loader::utility::GetClassFactoryMapMapMutex</definition>
        <argsstring>()</argsstring>
        <name>GetClassFactoryMapMapMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a7dd12e52ce22601d5745df656d76d971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a1cb3907890434c1bb35adf496751b6f7" kindref="member">LibpathPocolibVector</ref> &amp;</type>
        <definition>LibpathPocolibVector&amp; apollo::cyber::class_loader::utility::GetLibPathPocoShareLibVector</definition>
        <argsstring>()</argsstring>
        <name>GetLibPathPocoShareLibVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ac8ee63237d0ab29b318b85bb94578d4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::recursive_mutex &amp;</type>
        <definition>std::recursive_mutex&amp; apollo::cyber::class_loader::utility::GetLibPathPocoShareLibMutex</definition>
        <argsstring>()</argsstring>
        <name>GetLibPathPocoShareLibMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1ae1fdfff70d24016decbc228c3154ca71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a4cf2c311509ec13f7d3c5d1516bcc590" kindref="member">ClassClassFactoryMap</ref> &amp;</type>
        <definition>ClassClassFactoryMap&amp; apollo::cyber::class_loader::utility::GetClassFactoryMapByBaseClass</definition>
        <argsstring>(const std::string &amp;typeid_base_class_name)</argsstring>
        <name>GetClassFactoryMapByBaseClass</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>typeid_base_class_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5014c48715c314eb5f834c9757ae22b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string apollo::cyber::class_loader::utility::GetCurLoadingLibraryName</definition>
        <argsstring>()</argsstring>
        <name>GetCurLoadingLibraryName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a9a6ff61f249d956b25d4534d24bd51eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::class_loader::utility::SetCurLoadingLibraryName</definition>
        <argsstring>(const std::string &amp;library_name)</argsstring>
        <name>SetCurLoadingLibraryName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>library_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1aeee0d4fa36114f12c222715f07314fa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref> *</type>
        <definition>ClassLoader* apollo::cyber::class_loader::utility::GetCurActiveClassLoader</definition>
        <argsstring>()</argsstring>
        <name>GetCurActiveClassLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a88712dc69a4b979a0e6d45c27ae023df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::class_loader::utility::SetCurActiveClassLoader</definition>
        <argsstring>(ClassLoader *loader)</argsstring>
        <name>SetCurActiveClassLoader</name>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a88f5efcdbb427a9fdacd391c21ba807b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::class_loader::utility::IsLibraryLoaded</definition>
        <argsstring>(const std::string &amp;library_path, ClassLoader *loader)</argsstring>
        <name>IsLibraryLoaded</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>library_path</declname>
        </param>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a699f7658f6d62a8d2a9427dbb2141873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::class_loader::utility::IsLibraryLoadedByAnybody</definition>
        <argsstring>(const std::string &amp;library_path)</argsstring>
        <name>IsLibraryLoadedByAnybody</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>library_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a656284cd0c26b5728ff519bb67d3b830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::class_loader::utility::LoadLibrary</definition>
        <argsstring>(const std::string &amp;library_path, ClassLoader *loader)</argsstring>
        <name>LoadLibrary</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>library_path</declname>
        </param>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a94aadacc8880f1c0d157d0294fe00b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::class_loader::utility::UnloadLibrary</definition>
        <argsstring>(const std::string &amp;library_path, ClassLoader *loader)</argsstring>
        <name>UnloadLibrary</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>library_path</declname>
        </param>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a097070a23abf68916e625fdfe817f5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
          <param>
            <type>typename Base</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void apollo::cyber::class_loader::utility::RegisterClass</definition>
        <argsstring>(const std::string &amp;class_name, const std::string &amp;base_class_name)</argsstring>
        <name>RegisterClass</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>class_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>base_class_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="68" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="76" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a830e6d047a7b482ce10ab64efb4e6470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Base</type>
          </param>
        </templateparamlist>
        <type>Base *</type>
        <definition>Base * apollo::cyber::class_loader::utility::CreateClassObj</definition>
        <argsstring>(const std::string &amp;class_name, ClassLoader *loader)</argsstring>
        <name>CreateClassObj</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>class_name</declname>
        </param>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="71" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="94" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespaceapollo_1_1cyber_1_1class__loader_1_1utility_1a5cbc89db3b5172482c7a38d06739fa1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Base</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; apollo::cyber::class_loader::utility::GetValidClassNames</definition>
        <argsstring>(ClassLoader *loader)</argsstring>
        <name>GetValidClassNames</name>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1class__loader_1_1ClassLoader" kindref="compound">ClassLoader</ref> *</type>
          <declname>loader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" line="73" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_loader_utility.h" bodystart="114" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/work/apollo-fork/apollo/cyber/class_loader/utility/class_factory.h" line="29" column="1"/>
  </compounddef>
</doxygen>
