<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classapollo_1_1cyber_1_1base_1_1CCObjectPool" kind="class" prot="public">
    <compoundname>apollo::cyber::base::CCObjectPool</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; CCObjectPool&lt; T &gt; &gt;</basecompoundref>
    <includes refid="concurrent__object__pool_8h" local="no">concurrent_object_pool.h</includes>
    <innerclass refid="structapollo_1_1cyber_1_1base_1_1CCObjectPool_1_1Head" prot="private">apollo::cyber::base::CCObjectPool::Head</innerclass>
    <innerclass refid="structapollo_1_1cyber_1_1base_1_1CCObjectPool_1_1Node" prot="private">apollo::cyber::base::CCObjectPool::Node</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a40fd41481676d2e6ddac5d3237e7f234" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; <ref refid="structapollo_1_1cyber_1_1base_1_1CCObjectPool_1_1Head" kindref="compound">Head</ref> &gt;</type>
        <definition>std::atomic&lt;Head&gt; apollo::cyber::base::CCObjectPool&lt; T &gt;::free_head_</definition>
        <argsstring></argsstring>
        <name>free_head_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="67" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1ad5fdd44b05eac5aa18d54fdec5928dfb" prot="private" static="no" mutable="no">
        <type><ref refid="structapollo_1_1cyber_1_1base_1_1CCObjectPool_1_1Node" kindref="compound">Node</ref> *</type>
        <definition>Node* apollo::cyber::base::CCObjectPool&lt; T &gt;::node_arena_</definition>
        <argsstring></argsstring>
        <name>node_arena_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="68" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a3aaed740b510502df0ac4190b8e1734f" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t apollo::cyber::base::CCObjectPool&lt; T &gt;::capacity_</definition>
        <argsstring></argsstring>
        <name>capacity_</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="69" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1aef6bb40c0a7105fcafa6f36eec1990f1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::base::CCObjectPool&lt; T &gt;::CCObjectPool</definition>
        <argsstring>(uint32_t size)</argsstring>
        <name>CCObjectPool</name>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="38" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a66e73519d6e04f2575f474132677cd65" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>apollo::cyber::base::CCObjectPool&lt; T &gt;::~CCObjectPool</definition>
        <argsstring>()</argsstring>
        <name>~CCObjectPool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="39" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1ab92a199f84762cd01e980c960c8d0990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void apollo::cyber::base::CCObjectPool&lt; T &gt;::ConstructAll</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>ConstructAll</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="42" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1aa0be7adc9df9571d064f0d0f85c99398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; T &gt;</type>
        <definition>std::shared_ptr&lt; T &gt; apollo::cyber::base::CCObjectPool&lt; T &gt;::ConstructObject</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>ConstructObject</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="45" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="123" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a2185323d56b9150be49dd891fa9823bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; T &gt;</type>
        <definition>std::shared_ptr&lt; T &gt; apollo::cyber::base::CCObjectPool&lt; T &gt;::GetObject</definition>
        <argsstring>()</argsstring>
        <name>GetObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="47" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a32587174920cbf5b3ff400bb2870b49d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::base::CCObjectPool&lt; T &gt;::ReleaseObject</definition>
        <argsstring>(T *)</argsstring>
        <name>ReleaseObject</name>
        <param>
          <type>T *</type>
          <defname>object</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="48" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="137" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a60a5ad05a90e7c32542454162b46b2cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t apollo::cyber::base::CCObjectPool&lt; T &gt;::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="49" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a816f40fca7251af2f4296cbb061cf33f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::base::CCObjectPool&lt; T &gt;::CCObjectPool</definition>
        <argsstring>(CCObjectPool &amp;)=delete</argsstring>
        <name>CCObjectPool</name>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool" kindref="compound">CCObjectPool</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1ac870b2539ea47c8ae31fc27c4e3bc8d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool" kindref="compound">CCObjectPool</ref> &amp;</type>
        <definition>CCObjectPool&amp; apollo::cyber::base::CCObjectPool&lt; T &gt;::operator=</definition>
        <argsstring>(CCObjectPool &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool" kindref="compound">CCObjectPool</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1acbaa170bbe0171d605f3f640626685ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::base::CCObjectPool&lt; T &gt;::FindFreeHead</definition>
        <argsstring>(Head *head)</argsstring>
        <name>FindFreeHead</name>
        <param>
          <type><ref refid="structapollo_1_1cyber_1_1base_1_1CCObjectPool_1_1Head" kindref="compound">Head</ref> *</type>
          <declname>head</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="65" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="94" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="83">
        <label>apollo::cyber::base::CCObjectPool&lt; T &gt;</label>
        <link refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool"/>
        <childnode refid="84" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>std::enable_shared_from_this&lt; CCObjectPool&lt; T &gt; &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="87">
        <label>apollo::cyber::base::CCObjectPool&lt; T &gt;::Node</label>
        <link refid="structapollo_1_1cyber_1_1base_1_1CCObjectPool_1_1Node"/>
        <childnode refid="87" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="88" relation="usage">
          <edgelabel>object</edgelabel>
        </childnode>
      </node>
      <node id="88">
        <label>T</label>
      </node>
      <node id="85">
        <label>apollo::cyber::base::CCObjectPool&lt; T &gt;</label>
        <link refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool"/>
        <childnode refid="86" relation="public-inheritance">
        </childnode>
        <childnode refid="87" relation="usage">
          <edgelabel>node_arena_</edgelabel>
        </childnode>
      </node>
      <node id="86">
        <label>std::enable_shared_from_this&lt; CCObjectPool&lt; T &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" line="36" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/concurrent_object_pool.h" bodystart="36" bodyend="70"/>
    <listofallmembers>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a3aaed740b510502df0ac4190b8e1734f" prot="private" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>capacity_</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1aef6bb40c0a7105fcafa6f36eec1990f1" prot="public" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>CCObjectPool</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a816f40fca7251af2f4296cbb061cf33f" prot="private" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>CCObjectPool</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1ab92a199f84762cd01e980c960c8d0990" prot="public" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>ConstructAll</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1aa0be7adc9df9571d064f0d0f85c99398" prot="public" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>ConstructObject</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1acbaa170bbe0171d605f3f640626685ba" prot="private" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>FindFreeHead</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a40fd41481676d2e6ddac5d3237e7f234" prot="private" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>free_head_</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a2185323d56b9150be49dd891fa9823bd" prot="public" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>GetObject</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1ad5fdd44b05eac5aa18d54fdec5928dfb" prot="private" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>node_arena_</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1ac870b2539ea47c8ae31fc27c4e3bc8d8" prot="private" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>operator=</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a32587174920cbf5b3ff400bb2870b49d" prot="public" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>ReleaseObject</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a60a5ad05a90e7c32542454162b46b2cc" prot="public" virt="non-virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>size</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1CCObjectPool_1a66e73519d6e04f2575f474132677cd65" prot="public" virt="virtual"><scope>apollo::cyber::base::CCObjectPool</scope><name>~CCObjectPool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
