<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="message__traits_8h" kind="file">
    <compoundname>message_traits.h</compoundname>
    <includes local="no">string</includes>
    <includes refid="base_2macros_8h" local="yes">cyber/base/macros.h</includes>
    <includes refid="log_8h" local="yes">cyber/common/log.h</includes>
    <includes refid="intra__message_8h" local="yes">cyber/message/intra_message.h</includes>
    <includes refid="message__header_8h" local="yes">cyber/message/message_header.h</includes>
    <includes refid="protobuf__traits_8h" local="yes">cyber/message/protobuf_traits.h</includes>
    <includes refid="py__message__traits_8h" local="yes">cyber/message/py_message_traits.h</includes>
    <includes refid="raw__message__traits_8h" local="yes">cyber/message/raw_message_traits.h</includes>
    <includedby refid="node__channel__impl_8h" local="yes">node/node_channel_impl.h</includedby>
    <includedby refid="intra__dispatcher_8h" local="yes">transport/dispatcher/intra_dispatcher.h</includedby>
    <includedby refid="rtps__dispatcher_8h" local="yes">transport/dispatcher/rtps_dispatcher.h</includedby>
    <includedby refid="shm__dispatcher_8h" local="yes">transport/dispatcher/shm_dispatcher.h</includedby>
    <includedby refid="rtps__transmitter_8h" local="yes">transport/transmitter/rtps_transmitter.h</includedby>
    <includedby refid="shm__transmitter_8h" local="yes">transport/transmitter/shm_transmitter.h</includedby>
    <incdepgraph>
      <node id="4777">
        <label>stdarg.h</label>
      </node>
      <node id="4785">
        <label>arpa/inet.h</label>
      </node>
      <node id="4778">
        <label>cyber/binary.h</label>
        <link refid="binary_8h"/>
        <childnode refid="4772" relation="include">
        </childnode>
      </node>
      <node id="4779">
        <label>glog/logging.h</label>
      </node>
      <node id="4804">
        <label>cyber/message/raw_message_traits.h</label>
        <link refid="raw__message__traits_8h"/>
        <childnode refid="4782" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4805" relation="include">
        </childnode>
      </node>
      <node id="4789">
        <label>cyber/message/protobuf_traits.h</label>
        <link refid="protobuf__traits_8h"/>
        <childnode refid="4782" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4790" relation="include">
        </childnode>
      </node>
      <node id="4786">
        <label>stdint.h</label>
      </node>
      <node id="4797">
        <label>google/protobuf/compiler/parser.h</label>
      </node>
      <node id="4782">
        <label>cassert</label>
      </node>
      <node id="4793">
        <label>cyber/common/macros.h</label>
        <link refid="common_2macros_8h"/>
        <childnode refid="4791" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4792" relation="include">
        </childnode>
        <childnode refid="4794" relation="include">
        </childnode>
        <childnode refid="4795" relation="include">
        </childnode>
        <childnode refid="4773" relation="include">
        </childnode>
      </node>
      <node id="4772">
        <label>string</label>
      </node>
      <node id="4781">
        <label>cyber/message/intra_message.h</label>
        <link refid="intra__message_8h"/>
        <childnode refid="4782" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
      </node>
      <node id="4805">
        <label>cyber/message/raw_message.h</label>
        <link refid="raw__message_8h"/>
        <childnode refid="4787" relation="include">
        </childnode>
        <childnode refid="4782" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4790" relation="include">
        </childnode>
      </node>
      <node id="4800">
        <label>google/protobuf/io/tokenizer.h</label>
      </node>
      <node id="4790">
        <label>cyber/message/protobuf_factory.h</label>
        <link refid="protobuf__factory_8h"/>
        <childnode refid="4791" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4792" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4793" relation="include">
        </childnode>
        <childnode refid="4796" relation="include">
        </childnode>
        <childnode refid="4797" relation="include">
        </childnode>
        <childnode refid="4798" relation="include">
        </childnode>
        <childnode refid="4799" relation="include">
        </childnode>
        <childnode refid="4800" relation="include">
        </childnode>
      </node>
      <node id="4799">
        <label>google/protobuf/dynamic_message.h</label>
      </node>
      <node id="4787">
        <label>string.h</label>
      </node>
      <node id="4798">
        <label>google/protobuf/descriptor.h</label>
      </node>
      <node id="4796">
        <label>cyber/proto/proto_desc.pb.h</label>
      </node>
      <node id="4775">
        <label>new</label>
      </node>
      <node id="4776">
        <label>cyber/common/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="4777" relation="include">
        </childnode>
        <childnode refid="4778" relation="include">
        </childnode>
        <childnode refid="4779" relation="include">
        </childnode>
        <childnode refid="4780" relation="include">
        </childnode>
      </node>
      <node id="4795">
        <label>utility</label>
      </node>
      <node id="4803">
        <label>sstream</label>
      </node>
      <node id="4774">
        <label>cstdlib</label>
      </node>
      <node id="4791">
        <label>iostream</label>
      </node>
      <node id="4801">
        <label>cyber/message/py_message_traits.h</label>
        <link refid="py__message__traits_8h"/>
        <childnode refid="4782" relation="include">
        </childnode>
        <childnode refid="4783" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4802" relation="include">
        </childnode>
      </node>
      <node id="4792">
        <label>mutex</label>
      </node>
      <node id="4784">
        <label>cyber/message/message_header.h</label>
        <link refid="message__header_8h"/>
        <childnode refid="4785" relation="include">
        </childnode>
        <childnode refid="4786" relation="include">
        </childnode>
        <childnode refid="4787" relation="include">
        </childnode>
        <childnode refid="4788" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
      </node>
      <node id="4802">
        <label>cyber/message/py_message.h</label>
        <link refid="py__message_8h"/>
        <childnode refid="4791" relation="include">
        </childnode>
        <childnode refid="4803" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4793" relation="include">
        </childnode>
        <childnode refid="4790" relation="include">
        </childnode>
      </node>
      <node id="4780">
        <label>glog/raw_logging.h</label>
      </node>
      <node id="4771">
        <label>message/message_traits.h</label>
        <link refid="message_traits.h"/>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4773" relation="include">
        </childnode>
        <childnode refid="4776" relation="include">
        </childnode>
        <childnode refid="4781" relation="include">
        </childnode>
        <childnode refid="4784" relation="include">
        </childnode>
        <childnode refid="4789" relation="include">
        </childnode>
        <childnode refid="4801" relation="include">
        </childnode>
        <childnode refid="4804" relation="include">
        </childnode>
      </node>
      <node id="4794">
        <label>type_traits</label>
      </node>
      <node id="4788">
        <label>algorithm</label>
      </node>
      <node id="4773">
        <label>cyber/base/macros.h</label>
        <link refid="base_2macros_8h"/>
        <childnode refid="4774" relation="include">
        </childnode>
        <childnode refid="4775" relation="include">
        </childnode>
      </node>
      <node id="4783">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4815">
        <label>py_wrapper/py_timer.h</label>
        <link refid="py__timer_8h"/>
      </node>
      <node id="4813">
        <label>py_wrapper/py_node.h</label>
        <link refid="py__node_8h"/>
      </node>
      <node id="4826">
        <label>tools/cyber_recorder/player/player.h</label>
        <link refid="player_8h"/>
      </node>
      <node id="4837">
        <label>blocker/intra_reader.h</label>
        <link refid="intra__reader_8h"/>
        <childnode refid="4807" relation="include">
        </childnode>
      </node>
      <node id="4817">
        <label>tools/cyber_monitor/general_message_base.h</label>
        <link refid="general__message__base_8h"/>
        <childnode refid="4818" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
      </node>
      <node id="4822">
        <label>examples/timer_component_example/timer_component_example.h</label>
        <link refid="timer__component__example_8h"/>
      </node>
      <node id="4848">
        <label>transport/dispatcher/shm_dispatcher.h</label>
        <link refid="shm__dispatcher_8h"/>
        <childnode refid="4849" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4812">
        <label>py_wrapper/py_init.h</label>
        <link refid="py__init_8h"/>
      </node>
      <node id="4820">
        <label>tools/cyber_recorder/recorder.h</label>
        <link refid="recorder_8h"/>
      </node>
      <node id="4841">
        <label>tools/cyber_recorder/player/play_task.h</label>
        <link refid="play__task_8h"/>
        <childnode refid="4842" relation="include">
        </childnode>
      </node>
      <node id="4808">
        <label>node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="4809" relation="include">
        </childnode>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4825" relation="include">
        </childnode>
      </node>
      <node id="4807">
        <label>node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h"/>
        <childnode refid="4808" relation="include">
        </childnode>
        <childnode refid="4827" relation="include">
        </childnode>
        <childnode refid="4830" relation="include">
        </childnode>
      </node>
      <node id="4838">
        <label>node/reader_base.h</label>
        <link refid="reader__base_8h"/>
        <childnode refid="4836" relation="include">
        </childnode>
      </node>
      <node id="4811">
        <label>cyber.h</label>
        <link refid="cyber_8h"/>
        <childnode refid="4812" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4814" relation="include">
        </childnode>
        <childnode refid="4815" relation="include">
        </childnode>
        <childnode refid="4816" relation="include">
        </childnode>
        <childnode refid="4817" relation="include">
        </childnode>
        <childnode refid="4819" relation="include">
        </childnode>
        <childnode refid="4820" relation="include">
        </childnode>
      </node>
      <node id="4829">
        <label>parameter/parameter_client.h</label>
        <link refid="parameter__client_8h"/>
      </node>
      <node id="4850">
        <label>transport/transmitter/rtps_transmitter.h</label>
        <link refid="rtps__transmitter_8h"/>
        <childnode refid="4845" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4825">
        <label>tools/cyber_recorder/player/play_task_producer.h</label>
        <link refid="play__task__producer_8h"/>
        <childnode refid="4826" relation="include">
        </childnode>
      </node>
      <node id="4844">
        <label>transport/transmitter/intra_transmitter.h</label>
        <link refid="intra__transmitter_8h"/>
        <childnode refid="4845" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4832">
        <label>transport/dispatcher/intra_dispatcher.h</label>
        <link refid="intra__dispatcher_8h"/>
        <childnode refid="4833" relation="include">
        </childnode>
        <childnode refid="4844" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4816">
        <label>py_wrapper/py_topology_manager.h</label>
        <link refid="py__topology__manager_8h"/>
      </node>
      <node id="4810">
        <label>component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="4811" relation="include">
        </childnode>
        <childnode refid="4821" relation="include">
        </childnode>
        <childnode refid="4822" relation="include">
        </childnode>
        <childnode refid="4823" relation="include">
        </childnode>
      </node>
      <node id="4846">
        <label>transport/dispatcher/rtps_dispatcher.h</label>
        <link refid="rtps__dispatcher_8h"/>
        <childnode refid="4847" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4834">
        <label>transport/receiver/hybrid_receiver.h</label>
        <link refid="hybrid__receiver_8h"/>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4828">
        <label>node/node_service_impl.h</label>
        <link refid="node__service__impl_8h"/>
        <childnode refid="4808" relation="include">
        </childnode>
      </node>
      <node id="4843">
        <label>tools/cyber_recorder/player/play_task_consumer.h</label>
        <link refid="play__task__consumer_8h"/>
        <childnode refid="4826" relation="include">
        </childnode>
      </node>
      <node id="4831">
        <label>parameter/parameter_server.h</label>
        <link refid="parameter__server_8h"/>
      </node>
      <node id="4819">
        <label>tools/cyber_monitor/general_message.h</label>
        <link refid="general__message_8h"/>
      </node>
      <node id="4823">
        <label>mainboard/module_controller.h</label>
        <link refid="module__controller_8h"/>
      </node>
      <node id="4809">
        <label>component/component_base.h</label>
        <link refid="component__base_8h"/>
        <childnode refid="4810" relation="include">
        </childnode>
        <childnode refid="4824" relation="include">
        </childnode>
      </node>
      <node id="4849">
        <label>transport/receiver/shm_receiver.h</label>
        <link refid="shm__receiver_8h"/>
        <childnode refid="4834" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4818">
        <label>tools/cyber_monitor/general_channel_message.h</label>
        <link refid="general__channel__message_8h"/>
      </node>
      <node id="4851">
        <label>transport/transmitter/shm_transmitter.h</label>
        <link refid="shm__transmitter_8h"/>
        <childnode refid="4845" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4839">
        <label>node/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="4840" relation="include">
        </childnode>
        <childnode refid="4807" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
        <childnode refid="4841" relation="include">
        </childnode>
        <childnode refid="4825" relation="include">
        </childnode>
      </node>
      <node id="4824">
        <label>component/timer_component.h</label>
        <link refid="timer__component_8h"/>
        <childnode refid="4822" relation="include">
        </childnode>
      </node>
      <node id="4836">
        <label>node/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="4837" relation="include">
        </childnode>
        <childnode refid="4807" relation="include">
        </childnode>
        <childnode refid="4813" relation="include">
        </childnode>
      </node>
      <node id="4847">
        <label>transport/receiver/rtps_receiver.h</label>
        <link refid="rtps__receiver_8h"/>
        <childnode refid="4834" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4827">
        <label>service/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="4828" relation="include">
        </childnode>
        <childnode refid="4829" relation="include">
        </childnode>
      </node>
      <node id="4840">
        <label>blocker/intra_writer.h</label>
        <link refid="intra__writer_8h"/>
        <childnode refid="4807" relation="include">
        </childnode>
      </node>
      <node id="4835">
        <label>transport/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="4836" relation="include">
        </childnode>
        <childnode refid="4838" relation="include">
        </childnode>
        <childnode refid="4839" relation="include">
        </childnode>
      </node>
      <node id="4821">
        <label>examples/common_component_example/common_component_example.h</label>
        <link refid="common__component__example_8h"/>
      </node>
      <node id="4806">
        <label>message/message_traits.h</label>
        <link refid="message_traits.h"/>
        <childnode refid="4807" relation="include">
        </childnode>
        <childnode refid="4832" relation="include">
        </childnode>
        <childnode refid="4846" relation="include">
        </childnode>
        <childnode refid="4848" relation="include">
        </childnode>
        <childnode refid="4850" relation="include">
        </childnode>
        <childnode refid="4851" relation="include">
        </childnode>
      </node>
      <node id="4845">
        <label>transport/transmitter/hybrid_transmitter.h</label>
        <link refid="hybrid__transmitter_8h"/>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4833">
        <label>transport/receiver/intra_receiver.h</label>
        <link refid="intra__receiver_8h"/>
        <childnode refid="4834" relation="include">
        </childnode>
        <childnode refid="4835" relation="include">
        </childnode>
      </node>
      <node id="4830">
        <label>service/service.h</label>
        <link refid="service_8h"/>
        <childnode refid="4828" relation="include">
        </childnode>
        <childnode refid="4831" relation="include">
        </childnode>
      </node>
      <node id="4814">
        <label>py_wrapper/py_time.h</label>
        <link refid="py__time_8h"/>
      </node>
      <node id="4842">
        <label>tools/cyber_recorder/player/play_task_buffer.h</label>
        <link refid="play__task__buffer_8h"/>
        <childnode refid="4843" relation="include">
        </childnode>
        <childnode refid="4825" relation="include">
        </childnode>
        <childnode refid="4826" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1message_1_1HasSerializer" prot="public">apollo::cyber::message::HasSerializer</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1message">apollo::cyber::message</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_MESSAGE_MESSAGE_TRAITS_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CYBER_MESSAGE_MESSAGE_TRAITS_H_</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2macros_8h" kindref="compound">cyber/base/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="log_8h" kindref="compound">cyber/common/log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intra__message_8h" kindref="compound">cyber/message/intra_message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="message__header_8h" kindref="compound">cyber/message/message_header.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protobuf__traits_8h" kindref="compound">cyber/message/protobuf_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="py__message__traits_8h" kindref="compound">cyber/message/py_message_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="raw__message__traits_8h" kindref="compound">cyber/message/raw_message_traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apollo<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cyber<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">message<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasByteSize,<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a86c5c50ba417237cb14b1bc0ef413e42" kindref="member">ByteSize</ref>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasType,<sp/>TypeName)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasSetType,<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a2b337ed960f840af58dc36a9459a4865" kindref="member">SetTypeName</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasDescriptor,<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1adaa75b444b0befc8527210cfc29b1049" kindref="member">GetDescriptorString</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasSerializeToString,<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a56be747d5d58394d96f3b997a19c47b9" kindref="member">SerializeToString</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasParseFromString,<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1ac7c65d89fac88eda8ae486507c260f39" kindref="member">ParseFromString</ref>)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasSerializeToArray,<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a101dafae7968f3114fa0d27935ee0630" kindref="member">SerializeToArray</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="base_2macros_8h_1a1715330270e60c0d3c67af37123d7fc8" kindref="member">DEFINE_TYPE_TRAIT</ref>(HasParseFromArray,<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aeb045f496b533d2e1f405d8588f9b279" kindref="member">ParseFromArray</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">template<sp/>&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline lineno="44" refid="classapollo_1_1cyber_1_1message_1_1HasSerializer" refkind="compound"><highlight class="normal">class<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1HasSerializer" kindref="compound">HasSerializer</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="classapollo_1_1cyber_1_1message_1_1HasSerializer_1a27c4c58e5968d17a83eee501af7fad89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">value</ref><sp/>=</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasSerializeToString&lt;T&gt;::value</ref><sp/>&amp;&amp;<sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasParseFromString&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasSerializeToArray&lt;T&gt;::value</ref><sp/>&amp;&amp;<sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasParseFromArray&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>avoid<sp/>potential<sp/>ODR<sp/>violation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1HasSerializer" kindref="compound">HasSerializer&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasType&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_member_function_pointer&lt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decltype(&amp;T::TypeName)&gt;<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">::value</ref>,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="60" refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" kindref="member">MessageType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message.TypeName();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasType&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_member_function_pointer&lt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decltype(&amp;T::TypeName)&gt;<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">::value</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">std::string<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" kindref="member">MessageType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T::TypeName();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasType&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::is_base_of&lt;google::protobuf::Message, T&gt;::value</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">std::string<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" kindref="member">MessageType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasType&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_member_function_pointer&lt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decltype(&amp;T::TypeName)&gt;<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">::value</ref>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="87" refid="namespaceapollo_1_1cyber_1_1message_1a9804d294759658408491c5b8929e8cb5" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" kindref="member">MessageType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>T::TypeName();</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasType&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::is_base_of&lt;google::protobuf::Message, T&gt;::value</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">std::string<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" kindref="member">MessageType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name();</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasType&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::is_member_function_pointer&lt;decltype(&amp;T::TypeName)&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::is_base_of&lt;google::protobuf::Message, T&gt;::value</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">std::string<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" kindref="member">MessageType</ref>()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="112" refid="namespaceapollo_1_1cyber_1_1message_1a2b337ed960f840af58dc36a9459a4865" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasSetType&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;::type<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a2b337ed960f840af58dc36a9459a4865" kindref="member">SetTypeName</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name,<sp/>T*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>message-&gt;SetTypeName(type_name);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="118" refid="namespaceapollo_1_1cyber_1_1message_1aa80d580cdaf16ade14c16309e336d42e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasSetType&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;::type<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a2b337ed960f840af58dc36a9459a4865" kindref="member">SetTypeName</ref>(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name,<sp/>T*<sp/>message)<sp/>{}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="122" refid="namespaceapollo_1_1cyber_1_1message_1a86c5c50ba417237cb14b1bc0ef413e42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasByteSize&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;::type<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a86c5c50ba417237cb14b1bc0ef413e42" kindref="member">ByteSize</ref>(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message.ByteSize();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="128" refid="namespaceapollo_1_1cyber_1_1message_1a53d094570369a6e8413967cdd4025b82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasByteSize&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;::type<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a86c5c50ba417237cb14b1bc0ef413e42" kindref="member">ByteSize</ref>(</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>(void)message;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="135" refid="namespaceapollo_1_1cyber_1_1message_1abd3f08d8fd1f9a79b1da4d782c73fc48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1abd3f08d8fd1f9a79b1da4d782c73fc48" kindref="member">FullByteSize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>content_size<sp/>=<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a86c5c50ba417237cb14b1bc0ef413e42" kindref="member">ByteSize</ref>(message);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(content_size<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>content_size;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>content_size<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader" kindref="compound">MessageHeader</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="144" refid="namespaceapollo_1_1cyber_1_1message_1aeb045f496b533d2e1f405d8588f9b279" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasParseFromArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aeb045f496b533d2e1f405d8588f9b279" kindref="member">ParseFromArray</ref>(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>T*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message-&gt;ParseFromArray(data,<sp/>size);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasParseFromArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="151" refid="namespaceapollo_1_1cyber_1_1message_1a5808d28d4a46e2a0ca378526c25b1e37" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1aeb045f496b533d2e1f405d8588f9b279" kindref="member">ParseFromArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>T*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasParseFromString&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="157" refid="namespaceapollo_1_1cyber_1_1message_1ac7c65d89fac88eda8ae486507c260f39" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1ac7c65d89fac88eda8ae486507c260f39" kindref="member">ParseFromString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/>T*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message-&gt;ParseFromString(str);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasParseFromString&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="163" refid="namespaceapollo_1_1cyber_1_1message_1a447d1039d8ca437c0bb1a3f620154092" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1ac7c65d89fac88eda8ae486507c260f39" kindref="member">ParseFromString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str,<sp/>T*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="168" refid="namespaceapollo_1_1cyber_1_1message_1aabb2d1760d1f1755b1682813b0f39b6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasParseFromArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aabb2d1760d1f1755b1682813b0f39b6f" kindref="member">ParseFromHC</ref>(</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>T*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>header_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader" kindref="compound">MessageHeader</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="log_8h_1a49ca310f5cfa3c491ed674835ca1272f" kindref="member">RETURN_VAL_IF</ref>(size<sp/>&lt;<sp/>header_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader" kindref="compound">MessageHeader</ref>*<sp/>header<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader" kindref="compound">MessageHeader</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="log_8h_1a49ca310f5cfa3c491ed674835ca1272f" kindref="member">RETURN_VAL_IF</ref>((size<sp/>-<sp/>header_size)<sp/>&lt;<sp/>header-&gt;<ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader_1ad00ad3dbaf22ee8f2eb8bb9b3c156162" kindref="member">content_size</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a2b337ed960f840af58dc36a9459a4865" kindref="member">SetTypeName</ref>(header-&gt;<ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader_1a288834adb4d393378e80f851dbb40467" kindref="member">msg_type</ref>(),<sp/>message);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message-&gt;ParseFromArray(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;const<sp/>void*&gt;(static_cast&lt;const<sp/>char*&gt;(data)<sp/>+<sp/>header_size),</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;<ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader_1ad00ad3dbaf22ee8f2eb8bb9b3c156162" kindref="member">content_size</ref>());</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="181" refid="namespaceapollo_1_1cyber_1_1message_1a100b9c6809db1365bf09a3c621751449" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasParseFromArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aabb2d1760d1f1755b1682813b0f39b6f" kindref="member">ParseFromHC</ref>(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>T*<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasSerializeToArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="188" refid="namespaceapollo_1_1cyber_1_1message_1a101dafae7968f3114fa0d27935ee0630" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1a101dafae7968f3114fa0d27935ee0630" kindref="member">SerializeToArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message.SerializeToArray(data,<sp/>size);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasSerializeToArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="194" refid="namespaceapollo_1_1cyber_1_1message_1a6fdb56336a64af71da0e2c79de30b949" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1a101dafae7968f3114fa0d27935ee0630" kindref="member">SerializeToArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasSerializeToString&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="200" refid="namespaceapollo_1_1cyber_1_1message_1a56be747d5d58394d96f3b997a19c47b9" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1a56be747d5d58394d96f3b997a19c47b9" kindref="member">SerializeToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message,<sp/>std::string*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message.SerializeToString(str);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasSerializeToString&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="206" refid="namespaceapollo_1_1cyber_1_1message_1a5608a318a0ae528e1629c9cfc87e489a" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1a56be747d5d58394d96f3b997a19c47b9" kindref="member">SerializeToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message,<sp/>std::string*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasSerializeToArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="212" refid="namespaceapollo_1_1cyber_1_1message_1a388b614c8e6891dbfab3191e329ec7f1" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1a388b614c8e6891dbfab3191e329ec7f1" kindref="member">SerializeToHC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msg_size<sp/>=<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a86c5c50ba417237cb14b1bc0ef413e42" kindref="member">ByteSize</ref>(message);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg_size<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name<sp/>=<sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1aed7a0653ea8d7791da7cf676f507a8ba" kindref="member">MessageType</ref>(message);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader" kindref="compound">MessageHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>header.<ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader_1a57c7f03d660ec4c89800f3e68d464051" kindref="member">set_msg_type</ref>(type_name.data(),<sp/>type_name.size());</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>header.<ref refid="classapollo_1_1cyber_1_1message_1_1MessageHeader_1a6c2f3d9888d5ef0d1598cb02e2aece96" kindref="member">set_content_size</ref>(msg_size);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>memcpy(ptr,<sp/>static_cast&lt;const<sp/>void*&gt;(&amp;header),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_size<sp/>=<sp/>size<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a101dafae7968f3114fa0d27935ee0630" kindref="member">SerializeToArray</ref>(message,<sp/>reinterpret_cast&lt;void*&gt;(ptr),<sp/>left_size);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;!HasSerializeToArray&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type</highlight></codeline>
<codeline lineno="230" refid="namespaceapollo_1_1cyber_1_1message_1a4bf197cbc2ae92e0a3ff9f705af2971b" refkind="member"><highlight class="normal"><ref refid="namespaceapollo_1_1cyber_1_1message_1a388b614c8e6891dbfab3191e329ec7f1" kindref="member">SerializeToHC</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>message,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::enable_if&lt;HasDescriptor&lt;T&gt;::value</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="236" refid="namespaceapollo_1_1cyber_1_1message_1adaa75b444b0befc8527210cfc29b1049" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1adaa75b444b0befc8527210cfc29b1049" kindref="member">GetDescriptorString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type,<sp/>std::string*<sp/>desc_str)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1ab794defc8952601237ff80cd187ecec1" kindref="member">T::GetDescriptorString</ref>(type,<sp/>desc_str);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">HasDescriptor&lt;T&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::is_base_of&lt;google::protobuf::Message, T&gt;::value</ref>,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1adaa75b444b0befc8527210cfc29b1049" kindref="member">GetDescriptorString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type,<sp/>std::string*<sp/>desc_str)<sp/>{}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>MessageT,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="namespaceapollo_1_1cyber_1_1base_1aa3e2fff9b18a1214af4a70546fb7120f" kindref="member">std::is_base_of&lt;google::protobuf::Message, MessageT&gt;::value</ref>,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;::type<sp/>=<sp/>0&gt;</highlight></codeline>
<codeline lineno="251" refid="namespaceapollo_1_1cyber_1_1message_1ab794defc8952601237ff80cd187ecec1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1adaa75b444b0befc8527210cfc29b1049" kindref="member">GetDescriptorString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MessageT&amp;<sp/>message,<sp/>std::string*<sp/>desc_str)<sp/>{}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_MESSAGE_MESSAGE_TRAITS_H_</highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/message/message_traits.h"/>
  </compounddef>
</doxygen>
