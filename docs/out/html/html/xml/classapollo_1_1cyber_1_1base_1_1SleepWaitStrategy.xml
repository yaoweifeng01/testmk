<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy" kind="class" prot="public">
    <compoundname>apollo::cyber::base::SleepWaitStrategy</compoundname>
    <basecompoundref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" prot="public" virt="non-virtual">apollo::cyber::base::WaitStrategy</basecompoundref>
    <includes refid="wait__strategy_8h" local="no">wait_strategy.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3878d842918fde837f3835347990ac5c" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t apollo::cyber::base::SleepWaitStrategy::sleep_time_us_</definition>
        <argsstring></argsstring>
        <name>sleep_time_us_</name>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" line="72" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1af22660df1a87e2e576e9efc307a207e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::base::SleepWaitStrategy::SleepWaitStrategy</definition>
        <argsstring>()</argsstring>
        <name>SleepWaitStrategy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" line="58" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3bdd816ffaa3ddd7e46ee9959a3262fb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::base::SleepWaitStrategy::SleepWaitStrategy</definition>
        <argsstring>(uint64_t sleep_time_us)</argsstring>
        <name>SleepWaitStrategy</name>
        <param>
          <type>uint64_t</type>
          <declname>sleep_time_us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" line="59" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a5f5950c291b033be0e570035681e7f50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::base::SleepWaitStrategy::EmptyWait</definition>
        <argsstring>() override</argsstring>
        <name>EmptyWait</name>
        <reimplements refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1a5801f343cd1567ec6ee586b9845446e3">EmptyWait</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" line="62" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1aa461df397aa43dc8bd25743a9e266614" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void apollo::cyber::base::SleepWaitStrategy::SetSleepTimeMicroSecends</definition>
        <argsstring>(uint64_t sleep_time_us)</argsstring>
        <name>SetSleepTimeMicroSecends</name>
        <param>
          <type>uint64_t</type>
          <declname>sleep_time_us</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" line="67" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" bodystart="67" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="875">
        <label>apollo::cyber::base::WaitStrategy</label>
        <link refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy"/>
      </node>
      <node id="874">
        <label>apollo::cyber::base::SleepWaitStrategy</label>
        <link refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy"/>
        <childnode refid="875" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="877">
        <label>apollo::cyber::base::WaitStrategy</label>
        <link refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy"/>
      </node>
      <node id="876">
        <label>apollo::cyber::base::SleepWaitStrategy</label>
        <link refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy"/>
        <childnode refid="877" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" line="56" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h" bodystart="56" bodyend="73"/>
    <listofallmembers>
      <member refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1a521db3e728b67be1b89e16207dce014f" prot="public" virt="virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>BreakAllWait</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a5f5950c291b033be0e570035681e7f50" prot="public" virt="virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>EmptyWait</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1aec07f0b6c8f19538c324c7b1e3296dc3" prot="public" virt="virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>NotifyOne</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1aa461df397aa43dc8bd25743a9e266614" prot="public" virt="non-virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>SetSleepTimeMicroSecends</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3878d842918fde837f3835347990ac5c" prot="private" virt="non-virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>sleep_time_us_</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1af22660df1a87e2e576e9efc307a207e5" prot="public" virt="non-virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>SleepWaitStrategy</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3bdd816ffaa3ddd7e46ee9959a3262fb" prot="public" virt="non-virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>SleepWaitStrategy</name></member>
      <member refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1ad6d1289ee9a7a5a6412d93c55f974f85" prot="public" virt="virtual"><scope>apollo::cyber::base::SleepWaitStrategy</scope><name>~WaitStrategy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
