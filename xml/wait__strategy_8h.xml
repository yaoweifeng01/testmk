<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="wait__strategy_8h" kind="file">
    <compoundname>wait_strategy.h</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">condition_variable</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">mutex</includes>
    <includes local="no">thread</includes>
    <includedby refid="bounded__queue_8h" local="yes">base/bounded_queue.h</includedby>
    <incdepgraph>
      <node id="672">
        <label>condition_variable</label>
      </node>
      <node id="670">
        <label>base/wait_strategy.h</label>
        <link refid="wait_strategy.h"/>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
      </node>
      <node id="673">
        <label>cstdlib</label>
      </node>
      <node id="674">
        <label>mutex</label>
      </node>
      <node id="671">
        <label>chrono</label>
      </node>
      <node id="675">
        <label>thread</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="686">
        <label>py_wrapper/py_timer.h</label>
        <link refid="py__timer_8h"/>
      </node>
      <node id="684">
        <label>py_wrapper/py_node.h</label>
        <link refid="py__node_8h"/>
      </node>
      <node id="702">
        <label>tools/cyber_recorder/player/player.h</label>
        <link refid="player_8h"/>
      </node>
      <node id="696">
        <label>blocker/intra_reader.h</label>
        <link refid="intra__reader_8h"/>
        <childnode refid="697" relation="include">
        </childnode>
      </node>
      <node id="688">
        <label>tools/cyber_monitor/general_message_base.h</label>
        <link refid="general__message__base_8h"/>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
      </node>
      <node id="693">
        <label>examples/timer_component_example/timer_component_example.h</label>
        <link refid="timer__component__example_8h"/>
      </node>
      <node id="683">
        <label>py_wrapper/py_init.h</label>
        <link refid="py__init_8h"/>
      </node>
      <node id="691">
        <label>tools/cyber_recorder/recorder.h</label>
        <link refid="recorder_8h"/>
      </node>
      <node id="718">
        <label>tools/cyber_recorder/player/play_task.h</label>
        <link refid="play__task_8h"/>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="698">
        <label>node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
      </node>
      <node id="708">
        <label>scheduler/scheduler.h</label>
        <link refid="scheduler_8h"/>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="697">
        <label>node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h"/>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="715">
        <label>node/reader_base.h</label>
        <link refid="reader__base_8h"/>
        <childnode refid="695" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>cyber.h</label>
        <link refid="cyber_8h"/>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
      </node>
      <node id="727">
        <label>data/fusion/all_latest.h</label>
        <link refid="all__latest_8h"/>
        <childnode refid="726" relation="include">
        </childnode>
      </node>
      <node id="705">
        <label>parameter/parameter_client.h</label>
        <link refid="parameter__client_8h"/>
      </node>
      <node id="722">
        <label>scheduler/policy/scheduler_classic.h</label>
        <link refid="scheduler__classic_8h"/>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>croutine/routine_factory.h</label>
        <link refid="routine__factory_8h"/>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
      </node>
      <node id="678">
        <label>base/thread_pool.h</label>
        <link refid="thread__pool_8h"/>
      </node>
      <node id="723">
        <label>data/data_notifier.h</label>
        <link refid="data__notifier_8h"/>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="728" relation="include">
        </childnode>
      </node>
      <node id="731">
        <label>transport/transmitter/rtps_transmitter.h</label>
        <link refid="rtps__transmitter_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="701">
        <label>tools/cyber_recorder/player/play_task_producer.h</label>
        <link refid="play__task__producer_8h"/>
        <childnode refid="702" relation="include">
        </childnode>
      </node>
      <node id="677">
        <label>base/bounded_queue.h</label>
        <link refid="bounded__queue_8h"/>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="733" relation="include">
        </childnode>
        <childnode refid="734" relation="include">
        </childnode>
        <childnode refid="735" relation="include">
        </childnode>
      </node>
      <node id="730">
        <label>transport/transmitter/intra_transmitter.h</label>
        <link refid="intra__transmitter_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="728">
        <label>data/data_visitor_base.h</label>
        <link refid="data__visitor__base_8h"/>
        <childnode refid="726" relation="include">
        </childnode>
      </node>
      <node id="687">
        <label>py_wrapper/py_topology_manager.h</label>
        <link refid="py__topology__manager_8h"/>
      </node>
      <node id="681">
        <label>component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
      </node>
      <node id="710">
        <label>scheduler/scheduler_factory.h</label>
        <link refid="scheduler__factory_8h"/>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="711" relation="include">
        </childnode>
      </node>
      <node id="725">
        <label>data/data_dispatcher.h</label>
        <link refid="data__dispatcher_8h"/>
        <childnode refid="726" relation="include">
        </childnode>
      </node>
      <node id="713">
        <label>transport/receiver/hybrid_receiver.h</label>
        <link refid="hybrid__receiver_8h"/>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="704">
        <label>node/node_service_impl.h</label>
        <link refid="node__service__impl_8h"/>
        <childnode refid="698" relation="include">
        </childnode>
      </node>
      <node id="737">
        <label>timer/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
      </node>
      <node id="720">
        <label>tools/cyber_recorder/player/play_task_consumer.h</label>
        <link refid="play__task__consumer_8h"/>
        <childnode refid="702" relation="include">
        </childnode>
      </node>
      <node id="707">
        <label>parameter/parameter_server.h</label>
        <link refid="parameter__server_8h"/>
      </node>
      <node id="690">
        <label>tools/cyber_monitor/general_message.h</label>
        <link refid="general__message_8h"/>
      </node>
      <node id="694">
        <label>mainboard/module_controller.h</label>
        <link refid="module__controller_8h"/>
      </node>
      <node id="699">
        <label>component/component_base.h</label>
        <link refid="component__base_8h"/>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
      </node>
      <node id="711">
        <label>task/task_manager.h</label>
        <link refid="task__manager_8h"/>
        <childnode refid="712" relation="include">
        </childnode>
      </node>
      <node id="729">
        <label>transport/transmitter/transmitter.h</label>
        <link refid="transmitter_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="730" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>base/wait_strategy.h</label>
        <link refid="wait_strategy.h"/>
        <childnode refid="677" relation="include">
        </childnode>
      </node>
      <node id="689">
        <label>tools/cyber_monitor/general_channel_message.h</label>
        <link refid="general__channel__message_8h"/>
      </node>
      <node id="679">
        <label>event/perf_event_cache.h</label>
        <link refid="perf__event__cache_8h"/>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="723" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="729" relation="include">
        </childnode>
      </node>
      <node id="732">
        <label>transport/transmitter/shm_transmitter.h</label>
        <link refid="shm__transmitter_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="716">
        <label>node/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
      </node>
      <node id="726">
        <label>data/data_visitor.h</label>
        <link refid="data__visitor_8h"/>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
      </node>
      <node id="700">
        <label>component/timer_component.h</label>
        <link refid="timer__component_8h"/>
        <childnode refid="693" relation="include">
        </childnode>
      </node>
      <node id="736">
        <label>timer/timer_manager.h</label>
        <link refid="timer__manager_8h"/>
        <childnode refid="737" relation="include">
        </childnode>
      </node>
      <node id="735">
        <label>timer/timing_wheel.h</label>
        <link refid="timing__wheel_8h"/>
        <childnode refid="736" relation="include">
        </childnode>
      </node>
      <node id="695">
        <label>node/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
      </node>
      <node id="703">
        <label>service/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
      </node>
      <node id="717">
        <label>blocker/intra_writer.h</label>
        <link refid="intra__writer_8h"/>
        <childnode refid="697" relation="include">
        </childnode>
      </node>
      <node id="714">
        <label>transport/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
      </node>
      <node id="692">
        <label>examples/common_component_example/common_component_example.h</label>
        <link refid="common__component__example_8h"/>
      </node>
      <node id="734">
        <label>timer/timing_slot.h</label>
        <link refid="timing__slot_8h"/>
        <childnode refid="735" relation="include">
        </childnode>
      </node>
      <node id="721">
        <label>transport/transmitter/hybrid_transmitter.h</label>
        <link refid="hybrid__transmitter_8h"/>
        <childnode refid="714" relation="include">
        </childnode>
      </node>
      <node id="724">
        <label>data/channel_buffer.h</label>
        <link refid="channel__buffer_8h"/>
        <childnode refid="725" relation="include">
        </childnode>
        <childnode refid="726" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
      </node>
      <node id="733">
        <label>timer/timer_task.h</label>
        <link refid="timer__task_8h"/>
      </node>
      <node id="706">
        <label>service/service.h</label>
        <link refid="service_8h"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
      </node>
      <node id="709">
        <label>scheduler/policy/scheduler_choreography.h</label>
        <link refid="scheduler__choreography_8h"/>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
      <node id="712">
        <label>task/task.h</label>
        <link refid="task_8h"/>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="685">
        <label>py_wrapper/py_time.h</label>
        <link refid="py__time_8h"/>
      </node>
      <node id="719">
        <label>tools/cyber_recorder/player/play_task_buffer.h</label>
        <link refid="play__task__buffer_8h"/>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" prot="public">apollo::cyber::base::WaitStrategy</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy" prot="public">apollo::cyber::base::BlockWaitStrategy</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy" prot="public">apollo::cyber::base::SleepWaitStrategy</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1YieldWaitStrategy" prot="public">apollo::cyber::base::YieldWaitStrategy</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1BusySpinWaitStrategy" prot="public">apollo::cyber::base::BusySpinWaitStrategy</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy" prot="public">apollo::cyber::base::TimeoutBlockWaitStrategy</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1base">apollo::cyber::base</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_BASE_WAIT_STRATEGY_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CYBER_BASE_WAIT_STRATEGY_H_</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apollo<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cyber<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">base<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1aec07f0b6c8f19538c324c7b1e3296dc3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1aec07f0b6c8f19538c324c7b1e3296dc3" kindref="member">NotifyOne</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="33" refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1a521db3e728b67be1b89e16207dce014f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1a521db3e728b67be1b89e16207dce014f" kindref="member">BreakAllWait</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1a5801f343cd1567ec6ee586b9845446e3" kindref="member">EmptyWait</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35" refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1ad6d1289ee9a7a5a6412d93c55f974f85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy_1ad6d1289ee9a7a5a6412d93c55f974f85" kindref="member">~WaitStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy" kindref="compound">BlockWaitStrategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40" refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a3a84cd077ae77dfc1abfe13401fa4cea" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a3a84cd077ae77dfc1abfe13401fa4cea" kindref="member">BlockWaitStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="41" refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1ae8f8c929ddcc0973e18337a12535eb76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1ae8f8c929ddcc0973e18337a12535eb76" kindref="member">NotifyOne</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a9bc9e755055037e813f8a180ef4f609d" kindref="member">cv_</ref>.notify_one();<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a9be79b6f4cb8f78fb1715e2f221ebdff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a9be79b6f4cb8f78fb1715e2f221ebdff" kindref="member">EmptyWait</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1adca22a19b9f79e8a952001bba1286fb0" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a9bc9e755055037e813f8a180ef4f609d" kindref="member">cv_</ref>.wait(lock);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a7f883544b4a59a5b250e7f9bddd7c2b7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a7f883544b4a59a5b250e7f9bddd7c2b7" kindref="member">BreakAllWait</ref>()<sp/>{<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a9bc9e755055037e813f8a180ef4f609d" kindref="member">cv_</ref>.notify_all();<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52" refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1adca22a19b9f79e8a952001bba1286fb0" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1adca22a19b9f79e8a952001bba1286fb0" kindref="member">mutex_</ref>;</highlight></codeline>
<codeline lineno="53" refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a9bc9e755055037e813f8a180ef4f609d" refkind="member"><highlight class="normal"><sp/><sp/>std::condition_variable<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BlockWaitStrategy_1a9bc9e755055037e813f8a180ef4f609d" kindref="member">cv_</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy" kindref="compound">SleepWaitStrategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1af22660df1a87e2e576e9efc307a207e5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1af22660df1a87e2e576e9efc307a207e5" kindref="member">SleepWaitStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="59" refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3bdd816ffaa3ddd7e46ee9959a3262fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3bdd816ffaa3ddd7e46ee9959a3262fb" kindref="member">SleepWaitStrategy</ref>(uint64_t<sp/>sleep_time_us)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3878d842918fde837f3835347990ac5c" kindref="member">sleep_time_us_</ref>(sleep_time_us)<sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a5f5950c291b033be0e570035681e7f50" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a5f5950c291b033be0e570035681e7f50" kindref="member">EmptyWait</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::microseconds(<ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3878d842918fde837f3835347990ac5c" kindref="member">sleep_time_us_</ref>));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1aa461df397aa43dc8bd25743a9e266614" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1aa461df397aa43dc8bd25743a9e266614" kindref="member">SetSleepTimeMicroSecends</ref>(uint64_t<sp/>sleep_time_us)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3878d842918fde837f3835347990ac5c" kindref="member">sleep_time_us_</ref><sp/>=<sp/>sleep_time_us;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72" refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3878d842918fde837f3835347990ac5c" refkind="member"><highlight class="normal"><sp/><sp/>uint64_t<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1SleepWaitStrategy_1a3878d842918fde837f3835347990ac5c" kindref="member">sleep_time_us_</ref><sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classapollo_1_1cyber_1_1base_1_1YieldWaitStrategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1YieldWaitStrategy" kindref="compound">YieldWaitStrategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="classapollo_1_1cyber_1_1base_1_1YieldWaitStrategy_1a719590188101b78cdbb93a01a35093a4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1YieldWaitStrategy_1a719590188101b78cdbb93a01a35093a4" kindref="member">YieldWaitStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="78" refid="classapollo_1_1cyber_1_1base_1_1YieldWaitStrategy_1af8e125c547ae3fd1f0f46bee2a00c8c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1YieldWaitStrategy_1af8e125c547ae3fd1f0f46bee2a00c8c7" kindref="member">EmptyWait</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>std::this_thread::yield();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classapollo_1_1cyber_1_1base_1_1BusySpinWaitStrategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1BusySpinWaitStrategy" kindref="compound">BusySpinWaitStrategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86" refid="classapollo_1_1cyber_1_1base_1_1BusySpinWaitStrategy_1afdae9c8112da0739681ca0bf706f8265" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BusySpinWaitStrategy_1afdae9c8112da0739681ca0bf706f8265" kindref="member">BusySpinWaitStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="87" refid="classapollo_1_1cyber_1_1base_1_1BusySpinWaitStrategy_1a4201786d6f41c09260d2e88e2a2e4027" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1BusySpinWaitStrategy_1a4201786d6f41c09260d2e88e2a2e4027" kindref="member">EmptyWait</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy" kindref="compound">TimeoutBlockWaitStrategy</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1WaitStrategy" kindref="compound">WaitStrategy</ref><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1ac2250cd47422b7a04fa90d1f01b64df7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1ac2250cd47422b7a04fa90d1f01b64df7" kindref="member">TimeoutBlockWaitStrategy</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="93" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1ab44d7baaa734ad8b03c049c225c017ae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1ab44d7baaa734ad8b03c049c225c017ae" kindref="member">TimeoutBlockWaitStrategy</ref>(uint64_t<sp/>timeout)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a9dc28b4322af9a5dda67979eb1af0404" kindref="member">time_out_</ref>(<ref refid="classapollo_1_1cyber_1_1base_1_1std" kindref="compound">std</ref>::chrono::milliseconds(timeout))<sp/>{}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a4041a8f72141780fdd6e805c793dcc51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a4041a8f72141780fdd6e805c793dcc51" kindref="member">NotifyOne</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a8ca443c25600262b45e9edbb16b1d317" kindref="member">cv_</ref>.notify_one();<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a044671ac4289fdf17fc961a4919c8c7f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a044671ac4289fdf17fc961a4919c8c7f" kindref="member">EmptyWait</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(<ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a80b1e0c8b1eafa79aaf84b6bb1ff444e" kindref="member">mutex_</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a8ca443c25600262b45e9edbb16b1d317" kindref="member">cv_</ref>.wait_for(lock,<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a9dc28b4322af9a5dda67979eb1af0404" kindref="member">time_out_</ref>)<sp/>==<sp/>std::cv_status::timeout)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1afbd51fc01be0cee88a3218e559d4fe81" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1afbd51fc01be0cee88a3218e559d4fe81" kindref="member">BreakAllWait</ref>()<sp/>{<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a8ca443c25600262b45e9edbb16b1d317" kindref="member">cv_</ref>.notify_all();<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a431a2d9c252544b0b8264d13c7db8ab1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a431a2d9c252544b0b8264d13c7db8ab1" kindref="member">SetTimeout</ref>(uint64_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a9dc28b4322af9a5dda67979eb1af0404" kindref="member">time_out_</ref><sp/>=<sp/>std::chrono::milliseconds(timeout);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a80b1e0c8b1eafa79aaf84b6bb1ff444e" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a80b1e0c8b1eafa79aaf84b6bb1ff444e" kindref="member">mutex_</ref>;</highlight></codeline>
<codeline lineno="114" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a8ca443c25600262b45e9edbb16b1d317" refkind="member"><highlight class="normal"><sp/><sp/>std::condition_variable<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a8ca443c25600262b45e9edbb16b1d317" kindref="member">cv_</ref>;</highlight></codeline>
<codeline lineno="115" refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a9dc28b4322af9a5dda67979eb1af0404" refkind="member"><highlight class="normal"><sp/><sp/>std::chrono::milliseconds<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1TimeoutBlockWaitStrategy_1a9dc28b4322af9a5dda67979eb1af0404" kindref="member">time_out_</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_BASE_WAIT_STRATEGY_H_</highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/base/wait_strategy.h"/>
  </compounddef>
</doxygen>
