<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classCyberTopologyMessage" kind="class" prot="public">
    <compoundname>CyberTopologyMessage</compoundname>
    <basecompoundref refid="classRenderableMessage" prot="public" virt="non-virtual">RenderableMessage</basecompoundref>
    <includes refid="cyber__topology__message_8h" local="no">cyber_topology_message.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classCyberTopologyMessage_1a19a78ae56d2bd909e1b1403b3db83c52" prot="private" static="no">
        <name>SecondColumnType</name>
        <enumvalue id="classCyberTopologyMessage_1a19a78ae56d2bd909e1b1403b3db83c52a20b67ff6d86442b20819a3cd48bfc603" prot="public">
          <name>MessageType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classCyberTopologyMessage_1a19a78ae56d2bd909e1b1403b3db83c52ace684cd329278d8b9193d22926686db5" prot="public">
          <name>MessageFrameRatio</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="59" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" bodystart="59" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCyberTopologyMessage_1a1154eec678920dfada21e1f406dc28d0" prot="private" static="no" mutable="no">
        <type><ref refid="classCyberTopologyMessage_1a19a78ae56d2bd909e1b1403b3db83c52" kindref="member">SecondColumnType</ref></type>
        <definition>SecondColumnType CyberTopologyMessage::second_column_</definition>
        <argsstring></argsstring>
        <name>second_column_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="60" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCyberTopologyMessage_1a3cc7dce72601c852f9f602f242b72e73" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CyberTopologyMessage::pid_</definition>
        <argsstring></argsstring>
        <name>pid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="62" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCyberTopologyMessage_1ac3a5fef5a512872150261b3c32fafc60" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CyberTopologyMessage::col1_width_</definition>
        <argsstring></argsstring>
        <name>col1_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="63" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCyberTopologyMessage_1a5896a556d8bfbe583d112690f025a063" prot="private" static="no" mutable="no">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; CyberTopologyMessage::specified_channel_</definition>
        <argsstring></argsstring>
        <name>specified_channel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="64" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCyberTopologyMessage_1a982b69f726e8f42a1c3a0389865d84f8" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classGeneralChannelMessage" kindref="compound">GeneralChannelMessage</ref> * &gt;</type>
        <definition>std::map&lt;std::string, GeneralChannelMessage*&gt; CyberTopologyMessage::all_channels_map_</definition>
        <argsstring></argsstring>
        <name>all_channels_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="65" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCyberTopologyMessage_1ad29cc7035f525cb12cf25f0925656f74" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>CyberTopologyMessage::CyberTopologyMessage</definition>
        <argsstring>(const std::string &amp;channel)</argsstring>
        <name>CyberTopologyMessage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1a79e7cc8a9ae14ac907c987131f86153e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CyberTopologyMessage::~CyberTopologyMessage</definition>
        <argsstring>()</argsstring>
        <name>~CyberTopologyMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1aed410d8532bc9230d35f61cebcee4824" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CyberTopologyMessage::Render</definition>
        <argsstring>(const Screen *s, int key) override</argsstring>
        <name>Render</name>
        <reimplements refid="classRenderableMessage_1a3f65c247f5db9bb4918bca7d665bbdc6">Render</reimplements>
        <param>
          <type>const <ref refid="classScreen" kindref="compound">Screen</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1afc36cda612863d6a940bef1509f39f16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classRenderableMessage" kindref="compound">RenderableMessage</ref> *</type>
        <definition>RenderableMessage* CyberTopologyMessage::Child</definition>
        <argsstring>(int index) const override</argsstring>
        <name>Child</name>
        <reimplements refid="classRenderableMessage_1a0f933ad0befd4d3cf3a95e205c7398d6">Child</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1aeb57388a8b56c68681ab48f8ea5e5ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CyberTopologyMessage::TopologyChanged</definition>
        <argsstring>(const apollo::cyber::proto::ChangeMsg &amp;change_msg)</argsstring>
        <name>TopologyChanged</name>
        <param>
          <type>const apollo::cyber::proto::ChangeMsg &amp;</type>
          <declname>change_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1a7ebd8b12a5e56099a2aec1aac9c1825e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CyberTopologyMessage::AddReaderWriter</definition>
        <argsstring>(const apollo::cyber::proto::RoleAttributes &amp;role, bool isWriter)</argsstring>
        <name>AddReaderWriter</name>
        <param>
          <type>const apollo::cyber::proto::RoleAttributes &amp;</type>
          <declname>role</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isWriter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCyberTopologyMessage_1acd5200e9387d9d989177b64deb426b17" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CyberTopologyMessage::CyberTopologyMessage</definition>
        <argsstring>(const CyberTopologyMessage &amp;)=delete</argsstring>
        <name>CyberTopologyMessage</name>
        <param>
          <type>const <ref refid="classCyberTopologyMessage" kindref="compound">CyberTopologyMessage</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1a9783107b7c5254325ecf6d6f59a22d4e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCyberTopologyMessage" kindref="compound">CyberTopologyMessage</ref> &amp;</type>
        <definition>CyberTopologyMessage&amp; CyberTopologyMessage::operator=</definition>
        <argsstring>(const CyberTopologyMessage &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classCyberTopologyMessage" kindref="compound">CyberTopologyMessage</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1a4a61d42621d8db354727a18e9495a190" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CyberTopologyMessage::ChangeState</definition>
        <argsstring>(const Screen *s, int key)</argsstring>
        <name>ChangeState</name>
        <param>
          <type>const <ref refid="classScreen" kindref="compound">Screen</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1a2c775a5c10fce9c33f5316f877c9f018" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CyberTopologyMessage::isFromHere</definition>
        <argsstring>(const std::string &amp;nodeName)</argsstring>
        <name>isFromHere</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classCyberTopologyMessage_1ade141cee6b72beee0a1255292bfa5124" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, <ref refid="classGeneralChannelMessage" kindref="compound">GeneralChannelMessage</ref> * &gt;::const_iterator</type>
        <definition>std::map&lt;std::string, GeneralChannelMessage*&gt;::const_iterator CyberTopologyMessage::findChild</definition>
        <argsstring>(int index) const </argsstring>
        <name>findChild</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="199">
        <label>RenderableMessage</label>
        <link refid="classRenderableMessage"/>
      </node>
      <node id="198">
        <label>CyberTopologyMessage</label>
        <link refid="classCyberTopologyMessage"/>
        <childnode refid="199" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="201">
        <label>RenderableMessage</label>
        <link refid="classRenderableMessage"/>
        <childnode refid="201" relation="usage">
          <edgelabel>parent_</edgelabel>
        </childnode>
      </node>
      <node id="200">
        <label>CyberTopologyMessage</label>
        <link refid="classCyberTopologyMessage"/>
        <childnode refid="201" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" line="37" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/tools/cyber_monitor/cyber_topology_message.h" bodystart="37" bodyend="66"/>
    <listofallmembers>
      <member refid="classCyberTopologyMessage_1a7ebd8b12a5e56099a2aec1aac9c1825e" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>AddReaderWriter</name></member>
      <member refid="classCyberTopologyMessage_1a982b69f726e8f42a1c3a0389865d84f8" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>all_channels_map_</name></member>
      <member refid="classCyberTopologyMessage_1a4a61d42621d8db354727a18e9495a190" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>ChangeState</name></member>
      <member refid="classCyberTopologyMessage_1afc36cda612863d6a940bef1509f39f16" prot="public" virt="virtual"><scope>CyberTopologyMessage</scope><name>Child</name></member>
      <member refid="classCyberTopologyMessage_1ac3a5fef5a512872150261b3c32fafc60" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>col1_width_</name></member>
      <member refid="classCyberTopologyMessage_1ad29cc7035f525cb12cf25f0925656f74" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>CyberTopologyMessage</name></member>
      <member refid="classCyberTopologyMessage_1acd5200e9387d9d989177b64deb426b17" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>CyberTopologyMessage</name></member>
      <member refid="classCyberTopologyMessage_1ade141cee6b72beee0a1255292bfa5124" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>findChild</name></member>
      <member refid="classRenderableMessage_1a7b8a1627a96d0b0658be68c1ad6b99a5" prot="public" virt="virtual"><scope>CyberTopologyMessage</scope><name>frame_ratio</name></member>
      <member refid="classRenderableMessage_1a41d8fd1e6b5f8dee768ee227783c6913" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>frame_ratio_</name></member>
      <member refid="classRenderableMessage_1af8a50adc6f5e10a890eb435390e4e8a6" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>FrameRatio_Precision</name></member>
      <member refid="classCyberTopologyMessage_1a2c775a5c10fce9c33f5316f877c9f018" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>isFromHere</name></member>
      <member refid="classRenderableMessage_1a88b81ff1a8da326284fb4732b3d33f46" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>line_no</name></member>
      <member refid="classRenderableMessage_1ae3a742ebe02b5a7f547e97921464e8b5" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>line_no_</name></member>
      <member refid="classCyberTopologyMessage_1a9783107b7c5254325ecf6d6f59a22d4e" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>operator=</name></member>
      <member refid="classRenderableMessage_1a1d6dcb391ac3d77b8b38c5e926d58375" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>page_index_</name></member>
      <member refid="classRenderableMessage_1a6ada5869afedf204cc031e3345624017" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>page_item_count</name></member>
      <member refid="classRenderableMessage_1ac013cc75fdc393be5bf3c8e95d1b5430" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>page_item_count_</name></member>
      <member refid="classRenderableMessage_1ac3a01804a7e180672c2a34fe2b8b0a8c" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>pages_</name></member>
      <member refid="classRenderableMessage_1ab23728d14d9aff3efa0af7639ec6059c" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>parent</name></member>
      <member refid="classRenderableMessage_1a4745527c9b4cf149bfeccee669fd3aa8" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>parent_</name></member>
      <member refid="classCyberTopologyMessage_1a3cc7dce72601c852f9f602f242b72e73" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>pid_</name></member>
      <member refid="classCyberTopologyMessage_1aed410d8532bc9230d35f61cebcee4824" prot="public" virt="virtual"><scope>CyberTopologyMessage</scope><name>Render</name></member>
      <member refid="classRenderableMessage_1afdf4e7a3ff674f72bc6c9bba9997a422" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>RenderableMessage</name></member>
      <member refid="classRenderableMessage_1af2cbc010cd97044dee4ebb42c46ff340" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>reset_line_page</name></member>
      <member refid="classCyberTopologyMessage_1a1154eec678920dfada21e1f406dc28d0" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>second_column_</name></member>
      <member refid="classCyberTopologyMessage_1a19a78ae56d2bd909e1b1403b3db83c52" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>SecondColumnType</name></member>
      <member refid="classRenderableMessage_1aa6685f59c0d7a11b7510aa0f822d1a03" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>set_line_no</name></member>
      <member refid="classRenderableMessage_1a3313d82739bb1dc2da225a40aacfc9b6" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>set_parent</name></member>
      <member refid="classCyberTopologyMessage_1a5896a556d8bfbe583d112690f025a063" prot="private" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>specified_channel_</name></member>
      <member refid="classRenderableMessage_1a6ca2c5740e208cb4062fbe021ce72853" prot="protected" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>SplitPages</name></member>
      <member refid="classCyberTopologyMessage_1aeb57388a8b56c68681ab48f8ea5e5ea7" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>TopologyChanged</name></member>
      <member refid="classCyberTopologyMessage_1a79e7cc8a9ae14ac907c987131f86153e" prot="public" virt="non-virtual"><scope>CyberTopologyMessage</scope><name>~CyberTopologyMessage</name></member>
      <member refid="classRenderableMessage_1a2a539566921f83ea97eed0ea8965d842" prot="public" virt="virtual"><scope>CyberTopologyMessage</scope><name>~RenderableMessage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
