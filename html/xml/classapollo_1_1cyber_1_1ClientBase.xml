<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classapollo_1_1cyber_1_1ClientBase" kind="class" prot="public" abstract="yes">
    <compoundname>apollo::cyber::ClientBase</compoundname>
    <derivedcompoundref refid="classapollo_1_1cyber_1_1Client" prot="public" virt="non-virtual">apollo::cyber::Client&lt; Request, Response &gt;</derivedcompoundref>
    <includes refid="client__base_8h" local="no">client_base.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classapollo_1_1cyber_1_1ClientBase_1a91831fd30272eb760345dbfe6db86b44" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string apollo::cyber::ClientBase::service_name_</definition>
        <argsstring></argsstring>
        <name>service_name_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="41" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/service/client_base.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1ClientBase_1a11ae882f14c81d424e6065e84e274032" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>apollo::cyber::ClientBase::ClientBase</definition>
        <argsstring>(const std::string &amp;service_name)</argsstring>
        <name>ClientBase</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>service_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="30" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/service/client_base.h" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1ClientBase_1a415c5d2ee0ef5bf9fd55c9536417c718" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual apollo::cyber::ClientBase::~ClientBase</definition>
        <argsstring>()</argsstring>
        <name>~ClientBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="32" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/service/client_base.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1ClientBase_1a144df36f1d8e9ec5923e3ad77a4ee634" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void apollo::cyber::ClientBase::Destroy</definition>
        <argsstring>()=0</argsstring>
        <name>Destroy</name>
        <reimplementedby refid="classapollo_1_1cyber_1_1Client_1a7315a6cd9c733e844f0bd8e01006f491">Destroy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1ClientBase_1a9d29607d93d7d68ccc3b248ef6f9cf47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; apollo::cyber::ClientBase::ServiceName</definition>
        <argsstring>() const </argsstring>
        <name>ServiceName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="36" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/service/client_base.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classapollo_1_1cyber_1_1ClientBase_1af21c54a3f02783626ce5ae5eea621bda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool apollo::cyber::ClientBase::ServiceIsReady</definition>
        <argsstring>() const =0</argsstring>
        <name>ServiceIsReady</name>
        <reimplementedby refid="classapollo_1_1cyber_1_1Client_1a08a71d99f64374f6f06236848fbfe57c">ServiceIsReady</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="38" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classapollo_1_1cyber_1_1ClientBase_1ad6c2d2b853720a17de21f3bc25b6aae9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool apollo::cyber::ClientBase::WaitForServiceNanoseconds</definition>
        <argsstring>(std::chrono::nanoseconds time_out)</argsstring>
        <name>WaitForServiceNanoseconds</name>
        <param>
          <type>std::chrono::nanoseconds</type>
          <declname>time_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="43" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/service/client_base.h" bodystart="43" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="131">
        <label>apollo::cyber::ClientBase</label>
        <link refid="classapollo_1_1cyber_1_1ClientBase"/>
      </node>
      <node id="132">
        <label>apollo::cyber::Client&lt; Request, Response &gt;</label>
        <link refid="classapollo_1_1cyber_1_1Client"/>
        <childnode refid="131" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/work/apollo-fork/apollo/cyber/service/client_base.h" line="28" column="1" bodyfile="/home/work/apollo-fork/apollo/cyber/service/client_base.h" bodystart="28" bodyend="59"/>
    <listofallmembers>
      <member refid="classapollo_1_1cyber_1_1ClientBase_1a11ae882f14c81d424e6065e84e274032" prot="public" virt="non-virtual"><scope>apollo::cyber::ClientBase</scope><name>ClientBase</name></member>
      <member refid="classapollo_1_1cyber_1_1ClientBase_1a144df36f1d8e9ec5923e3ad77a4ee634" prot="public" virt="pure-virtual"><scope>apollo::cyber::ClientBase</scope><name>Destroy</name></member>
      <member refid="classapollo_1_1cyber_1_1ClientBase_1a91831fd30272eb760345dbfe6db86b44" prot="protected" virt="non-virtual"><scope>apollo::cyber::ClientBase</scope><name>service_name_</name></member>
      <member refid="classapollo_1_1cyber_1_1ClientBase_1af21c54a3f02783626ce5ae5eea621bda" prot="public" virt="pure-virtual"><scope>apollo::cyber::ClientBase</scope><name>ServiceIsReady</name></member>
      <member refid="classapollo_1_1cyber_1_1ClientBase_1a9d29607d93d7d68ccc3b248ef6f9cf47" prot="public" virt="non-virtual"><scope>apollo::cyber::ClientBase</scope><name>ServiceName</name></member>
      <member refid="classapollo_1_1cyber_1_1ClientBase_1ad6c2d2b853720a17de21f3bc25b6aae9" prot="protected" virt="non-virtual"><scope>apollo::cyber::ClientBase</scope><name>WaitForServiceNanoseconds</name></member>
      <member refid="classapollo_1_1cyber_1_1ClientBase_1a415c5d2ee0ef5bf9fd55c9536417c718" prot="public" virt="virtual"><scope>apollo::cyber::ClientBase</scope><name>~ClientBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
