<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="py__message_8h" kind="file">
    <compoundname>py_message.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes refid="common_2macros_8h" local="yes">cyber/common/macros.h</includes>
    <includes refid="protobuf__factory_8h" local="yes">cyber/message/protobuf_factory.h</includes>
    <includedby refid="py__message__traits_8h" local="yes">message/py_message_traits.h</includedby>
    <includedby refid="py__node_8h" local="yes">py_wrapper/py_node.h</includedby>
    <includedby refid="py__record_8h" local="yes">py_wrapper/py_record.h</includedby>
    <incdepgraph>
      <node id="5003">
        <label>google/protobuf/compiler/parser.h</label>
      </node>
      <node id="4993">
        <label>cyber/common/macros.h</label>
        <link refid="common_2macros_8h"/>
        <childnode refid="4990" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="4995" relation="include">
        </childnode>
        <childnode refid="4996" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
      </node>
      <node id="4992">
        <label>string</label>
      </node>
      <node id="5006">
        <label>google/protobuf/io/tokenizer.h</label>
      </node>
      <node id="5001">
        <label>cyber/message/protobuf_factory.h</label>
        <link refid="protobuf__factory_8h"/>
        <childnode refid="4990" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="4995" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
        <childnode refid="5004" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
      </node>
      <node id="5005">
        <label>google/protobuf/dynamic_message.h</label>
      </node>
      <node id="5004">
        <label>google/protobuf/descriptor.h</label>
      </node>
      <node id="5002">
        <label>cyber/proto/proto_desc.pb.h</label>
      </node>
      <node id="5000">
        <label>new</label>
      </node>
      <node id="4997">
        <label>utility</label>
      </node>
      <node id="4991">
        <label>sstream</label>
      </node>
      <node id="4999">
        <label>cstdlib</label>
      </node>
      <node id="4990">
        <label>iostream</label>
      </node>
      <node id="4995">
        <label>mutex</label>
      </node>
      <node id="4989">
        <label>message/py_message.h</label>
        <link refid="py_message.h"/>
        <childnode refid="4990" relation="include">
        </childnode>
        <childnode refid="4991" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="5001" relation="include">
        </childnode>
      </node>
      <node id="4996">
        <label>type_traits</label>
      </node>
      <node id="4998">
        <label>cyber/base/macros.h</label>
        <link refid="base_2macros_8h"/>
        <childnode refid="4999" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
      </node>
      <node id="4994">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5018">
        <label>py_wrapper/py_timer.h</label>
        <link refid="py__timer_8h"/>
      </node>
      <node id="5016">
        <label>py_wrapper/py_node.h</label>
        <link refid="py__node_8h"/>
      </node>
      <node id="5029">
        <label>tools/cyber_recorder/player/player.h</label>
        <link refid="player_8h"/>
      </node>
      <node id="5055">
        <label>py_wrapper/py_record.h</label>
        <link refid="py__record_8h"/>
      </node>
      <node id="5040">
        <label>blocker/intra_reader.h</label>
        <link refid="intra__reader_8h"/>
        <childnode refid="5010" relation="include">
        </childnode>
      </node>
      <node id="5020">
        <label>tools/cyber_monitor/general_message_base.h</label>
        <link refid="general__message__base_8h"/>
        <childnode refid="5021" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
      </node>
      <node id="5025">
        <label>examples/timer_component_example/timer_component_example.h</label>
        <link refid="timer__component__example_8h"/>
      </node>
      <node id="5051">
        <label>transport/dispatcher/shm_dispatcher.h</label>
        <link refid="shm__dispatcher_8h"/>
        <childnode refid="5052" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5015">
        <label>py_wrapper/py_init.h</label>
        <link refid="py__init_8h"/>
      </node>
      <node id="5023">
        <label>tools/cyber_recorder/recorder.h</label>
        <link refid="recorder_8h"/>
      </node>
      <node id="5044">
        <label>tools/cyber_recorder/player/play_task.h</label>
        <link refid="play__task_8h"/>
        <childnode refid="5045" relation="include">
        </childnode>
      </node>
      <node id="5011">
        <label>node/node.h</label>
        <link refid="node_8h"/>
        <childnode refid="5012" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
      </node>
      <node id="5010">
        <label>node/node_channel_impl.h</label>
        <link refid="node__channel__impl_8h"/>
        <childnode refid="5011" relation="include">
        </childnode>
        <childnode refid="5030" relation="include">
        </childnode>
        <childnode refid="5033" relation="include">
        </childnode>
      </node>
      <node id="5041">
        <label>node/reader_base.h</label>
        <link refid="reader__base_8h"/>
        <childnode refid="5039" relation="include">
        </childnode>
      </node>
      <node id="5014">
        <label>cyber.h</label>
        <link refid="cyber_8h"/>
        <childnode refid="5015" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
        <childnode refid="5018" relation="include">
        </childnode>
        <childnode refid="5019" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
      </node>
      <node id="5032">
        <label>parameter/parameter_client.h</label>
        <link refid="parameter__client_8h"/>
      </node>
      <node id="5053">
        <label>transport/transmitter/rtps_transmitter.h</label>
        <link refid="rtps__transmitter_8h"/>
        <childnode refid="5048" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5028">
        <label>tools/cyber_recorder/player/play_task_producer.h</label>
        <link refid="play__task__producer_8h"/>
        <childnode refid="5029" relation="include">
        </childnode>
      </node>
      <node id="5047">
        <label>transport/transmitter/intra_transmitter.h</label>
        <link refid="intra__transmitter_8h"/>
        <childnode refid="5048" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5035">
        <label>transport/dispatcher/intra_dispatcher.h</label>
        <link refid="intra__dispatcher_8h"/>
        <childnode refid="5036" relation="include">
        </childnode>
        <childnode refid="5047" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5019">
        <label>py_wrapper/py_topology_manager.h</label>
        <link refid="py__topology__manager_8h"/>
      </node>
      <node id="5013">
        <label>component/component.h</label>
        <link refid="component_8h"/>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5024" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5026" relation="include">
        </childnode>
      </node>
      <node id="5049">
        <label>transport/dispatcher/rtps_dispatcher.h</label>
        <link refid="rtps__dispatcher_8h"/>
        <childnode refid="5050" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5037">
        <label>transport/receiver/hybrid_receiver.h</label>
        <link refid="hybrid__receiver_8h"/>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5031">
        <label>node/node_service_impl.h</label>
        <link refid="node__service__impl_8h"/>
        <childnode refid="5011" relation="include">
        </childnode>
      </node>
      <node id="5046">
        <label>tools/cyber_recorder/player/play_task_consumer.h</label>
        <link refid="play__task__consumer_8h"/>
        <childnode refid="5029" relation="include">
        </childnode>
      </node>
      <node id="5034">
        <label>parameter/parameter_server.h</label>
        <link refid="parameter__server_8h"/>
      </node>
      <node id="5022">
        <label>tools/cyber_monitor/general_message.h</label>
        <link refid="general__message_8h"/>
      </node>
      <node id="5026">
        <label>mainboard/module_controller.h</label>
        <link refid="module__controller_8h"/>
      </node>
      <node id="5012">
        <label>component/component_base.h</label>
        <link refid="component__base_8h"/>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
      </node>
      <node id="5052">
        <label>transport/receiver/shm_receiver.h</label>
        <link refid="shm__receiver_8h"/>
        <childnode refid="5037" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5021">
        <label>tools/cyber_monitor/general_channel_message.h</label>
        <link refid="general__channel__message_8h"/>
      </node>
      <node id="5054">
        <label>transport/transmitter/shm_transmitter.h</label>
        <link refid="shm__transmitter_8h"/>
        <childnode refid="5048" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5042">
        <label>node/writer.h</label>
        <link refid="writer_8h"/>
        <childnode refid="5043" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
        <childnode refid="5044" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
      </node>
      <node id="5027">
        <label>component/timer_component.h</label>
        <link refid="timer__component_8h"/>
        <childnode refid="5025" relation="include">
        </childnode>
      </node>
      <node id="5039">
        <label>node/reader.h</label>
        <link refid="reader_8h"/>
        <childnode refid="5040" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
      </node>
      <node id="5050">
        <label>transport/receiver/rtps_receiver.h</label>
        <link refid="rtps__receiver_8h"/>
        <childnode refid="5037" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5030">
        <label>service/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
      </node>
      <node id="5043">
        <label>blocker/intra_writer.h</label>
        <link refid="intra__writer_8h"/>
        <childnode refid="5010" relation="include">
        </childnode>
      </node>
      <node id="5008">
        <label>message/py_message_traits.h</label>
        <link refid="py__message__traits_8h"/>
        <childnode refid="5009" relation="include">
        </childnode>
      </node>
      <node id="5007">
        <label>message/py_message.h</label>
        <link refid="py_message.h"/>
        <childnode refid="5008" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
        <childnode refid="5055" relation="include">
        </childnode>
      </node>
      <node id="5038">
        <label>transport/transport.h</label>
        <link refid="transport_8h"/>
        <childnode refid="5039" relation="include">
        </childnode>
        <childnode refid="5041" relation="include">
        </childnode>
        <childnode refid="5042" relation="include">
        </childnode>
      </node>
      <node id="5024">
        <label>examples/common_component_example/common_component_example.h</label>
        <link refid="common__component__example_8h"/>
      </node>
      <node id="5009">
        <label>message/message_traits.h</label>
        <link refid="message__traits_8h"/>
        <childnode refid="5010" relation="include">
        </childnode>
        <childnode refid="5035" relation="include">
        </childnode>
        <childnode refid="5049" relation="include">
        </childnode>
        <childnode refid="5051" relation="include">
        </childnode>
        <childnode refid="5053" relation="include">
        </childnode>
        <childnode refid="5054" relation="include">
        </childnode>
      </node>
      <node id="5048">
        <label>transport/transmitter/hybrid_transmitter.h</label>
        <link refid="hybrid__transmitter_8h"/>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5036">
        <label>transport/receiver/intra_receiver.h</label>
        <link refid="intra__receiver_8h"/>
        <childnode refid="5037" relation="include">
        </childnode>
        <childnode refid="5038" relation="include">
        </childnode>
      </node>
      <node id="5033">
        <label>service/service.h</label>
        <link refid="service_8h"/>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5017">
        <label>py_wrapper/py_time.h</label>
        <link refid="py__time_8h"/>
      </node>
      <node id="5045">
        <label>tools/cyber_recorder/player/play_task_buffer.h</label>
        <link refid="play__task__buffer_8h"/>
        <childnode refid="5046" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap" prot="public">apollo::cyber::message::PyMessageWrap</innerclass>
    <innerclass refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor" prot="public">apollo::cyber::message::PyMessageWrap::Descriptor</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1message">apollo::cyber::message</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_MESSAGE_PY_MESSAGE_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CYBER_MESSAGE_PY_MESSAGE_H_</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_2macros_8h" kindref="compound">cyber/common/macros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protobuf__factory_8h" kindref="compound">cyber/message/protobuf_factory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apollo<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cyber<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">message<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespaceapollo_1_1cyber_1_1message_1a365817ca48261ee138abde4580d63af9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a365817ca48261ee138abde4580d63af9" kindref="member">PY_MESSAGE_FULLNAME</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;apollo.cyber.message.PyMessage&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap" kindref="compound">PyMessageWrap</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1afee16e2be887e76d7541d18a50597c99" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1afee16e2be887e76d7541d18a50597c99" kindref="member">PyMessageWrap</ref>()<sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" kindref="member">type_name_</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="36" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91764a5f338c6db0a333f58423a54a8d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91764a5f338c6db0a333f58423a54a8d" kindref="member">PyMessageWrap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a22acd879a7d1f5f0bc631fe35a340e46" kindref="member">type_name</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>(msg),<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" kindref="member">type_name_</ref>(type_name)<sp/>{}</highlight></codeline>
<codeline lineno="38" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1aa29c3193a5a4d8ae123e5fc95ac72a00" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1aa29c3193a5a4d8ae123e5fc95ac72a00" kindref="member">PyMessageWrap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap" kindref="compound">PyMessageWrap</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>(msg.<ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>),<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" kindref="member">type_name_</ref>(msg.<ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" kindref="member">type_name_</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="40" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a296d5b0f8510e1dd8583269d761b3366" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a296d5b0f8510e1dd8583269d761b3366" kindref="member">~PyMessageWrap</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor" kindref="compound">Descriptor</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor_1a3676d5f8e664604517960ceb69a995e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor_1a3676d5f8e664604517960ceb69a995e4" kindref="member">full_name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a365817ca48261ee138abde4580d63af9" kindref="member">PY_MESSAGE_FULLNAME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="45" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor_1a1a7460d7d8d5cc51eff5cc83c605d5cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor_1a1a7460d7d8d5cc51eff5cc83c605d5cc" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a365817ca48261ee138abde4580d63af9" kindref="member">PY_MESSAGE_FULLNAME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Descriptor*<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ae1a16e7f449dc7d1e9b0f6e0ccf35e29" kindref="member">descriptor</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a9941457c59045d4e919fc461ab421fc9" kindref="member">TypeName</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a73014cb1cfb7e55db20dff56015d05e1" kindref="member">SerializeToArray</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a555cdbc94dc2d7dd8731c430ce2162f8" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1abec5b4646d56c120a9e9f4853c02e506" kindref="member">SerializeToString</ref>(std::string*<sp/>output)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a6a7d1a5bfdaa56abcea8adb9c6c9ca61" kindref="member">ParseFromArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a555cdbc94dc2d7dd8731c430ce2162f8" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1aabd1e75c765bd486ec7e1a8d3bb9c9dd" kindref="member">ParseFromString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msgstr);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a5444586ea014dea049f7323abdae7818" kindref="member">ByteSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a4f86413a70bab63821d62eee7b16d3f2" kindref="member">GetDescriptorString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>desc_str);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a555cdbc94dc2d7dd8731c430ce2162f8" kindref="member">data</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a874e045ca9bea882996e2988d99822ab" kindref="member">set_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a22acd879a7d1f5f0bc631fe35a340e46" kindref="member">type_name</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1afa88ed767a773b42fe79293f110bfd53" kindref="member">set_type_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a22acd879a7d1f5f0bc631fe35a340e46" kindref="member">type_name</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="66" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" refkind="member"><highlight class="normal"><sp/><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" kindref="member">type_name_</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a4f86413a70bab63821d62eee7b16d3f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a4f86413a70bab63821d62eee7b16d3f2" kindref="member">PyMessageWrap::GetDescriptorString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>desc_str)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="namespaceapollo_1_1cyber_1_1scheduler_1aa3840df1c2d2c2b4593d229da1c1d0df" kindref="member">ProtobufFactory::Instance</ref>()-&gt;GetDescriptorString(type,<sp/>desc_str);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a874e045ca9bea882996e2988d99822ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a874e045ca9bea882996e2988d99822ab" kindref="member">PyMessageWrap::set_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>{<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref><sp/>=<sp/>msg;<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a555cdbc94dc2d7dd8731c430ce2162f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a555cdbc94dc2d7dd8731c430ce2162f8" kindref="member">PyMessageWrap::data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a6a7d1a5bfdaa56abcea8adb9c6c9ca61" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a6a7d1a5bfdaa56abcea8adb9c6c9ca61" kindref="member">PyMessageWrap::ParseFromArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>size<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>.assign(reinterpret_cast&lt;const<sp/>char*&gt;(data),<sp/>size);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1aabd1e75c765bd486ec7e1a8d3bb9c9dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1aabd1e75c765bd486ec7e1a8d3bb9c9dd" kindref="member">PyMessageWrap::ParseFromString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msgstr)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>:<sp/>will<sp/>use<sp/>submsg<sp/>type<sp/>ywf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::size_t<sp/>pos<sp/>=<sp/>msgstr.rfind(data_split_pattern);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(pos<sp/>!=<sp/>std::string::npos)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>std::size_t<sp/>split_count<sp/>=<sp/>data_split_pattern.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>data_<sp/>=<sp/>msgstr.substr(0,<sp/>pos);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>type_name_<sp/>=<sp/>msgstr.substr(pos<sp/>+<sp/>split_count);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>return<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref><sp/>=<sp/>msgstr;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a73014cb1cfb7e55db20dff56015d05e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a73014cb1cfb7e55db20dff56015d05e1" kindref="member">PyMessageWrap::SerializeToArray</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a5444586ea014dea049f7323abdae7818" kindref="member">ByteSize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>memcpy(data,<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>.data(),<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>.size());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1abec5b4646d56c120a9e9f4853c02e506" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1abec5b4646d56c120a9e9f4853c02e506" kindref="member">PyMessageWrap::SerializeToString</ref>(std::string*<sp/>output)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>todo<sp/>:<sp/>will<sp/>use<sp/>submsg<sp/>type<sp/>ywf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>*output<sp/>=<sp/>data_<sp/>+<sp/>data_split_pattern<sp/>+<sp/>type_name_;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>*output<sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a5444586ea014dea049f7323abdae7818" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a5444586ea014dea049f7323abdae7818" kindref="member">PyMessageWrap::ByteSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ac44859ce8f9f14415236f122a8594e14" kindref="member">data_</ref>.size());</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a22acd879a7d1f5f0bc631fe35a340e46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a22acd879a7d1f5f0bc631fe35a340e46" kindref="member">PyMessageWrap::type_name</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" kindref="member">type_name_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1afa88ed767a773b42fe79293f110bfd53" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1afa88ed767a773b42fe79293f110bfd53" kindref="member">PyMessageWrap::set_type_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type_name)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a91c454f1972daa37cd846a0bd436d19b" kindref="member">type_name_</ref><sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a22acd879a7d1f5f0bc631fe35a340e46" kindref="member">type_name</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ae1a16e7f449dc7d1e9b0f6e0ccf35e29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor" kindref="compound">PyMessageWrap::Descriptor</ref>*<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1ae1a16e7f449dc7d1e9b0f6e0ccf35e29" kindref="member">PyMessageWrap::descriptor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1_1Descriptor" kindref="compound">Descriptor</ref><sp/>desc;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;desc;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a9941457c59045d4e919fc461ab421fc9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classapollo_1_1cyber_1_1message_1_1PyMessageWrap_1a9941457c59045d4e919fc461ab421fc9" kindref="member">PyMessageWrap::TypeName</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceapollo_1_1cyber_1_1message_1a365817ca48261ee138abde4580d63af9" kindref="member">PY_MESSAGE_FULLNAME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_MESSAGE_PY_MESSAGE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/message/py_message.h"/>
  </compounddef>
</doxygen>
