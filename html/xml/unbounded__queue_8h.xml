<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="unbounded__queue_8h" kind="file">
    <compoundname>unbounded_queue.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">atomic</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="667">
        <label>atomic</label>
      </node>
      <node id="664">
        <label>base/unbounded_queue.h</label>
        <link refid="unbounded_queue.h"/>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
      </node>
      <node id="665">
        <label>stdint.h</label>
      </node>
      <node id="666">
        <label>unistd.h</label>
      </node>
      <node id="668">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue" prot="public">apollo::cyber::base::UnboundedQueue</innerclass>
    <innerclass refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" prot="private">apollo::cyber::base::UnboundedQueue::Node</innerclass>
    <innernamespace refid="namespaceapollo">apollo</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber">apollo::cyber</innernamespace>
    <innernamespace refid="namespaceapollo_1_1cyber_1_1base">apollo::cyber::base</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018<sp/>The<sp/>Apollo<sp/>Authors.<sp/>All<sp/>Rights<sp/>Reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CYBER_BASE_UNBOUNDED_QUEUE_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CYBER_BASE_UNBOUNDED_QUEUE_H_</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apollo<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cyber<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">base<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="30" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue" kindref="compound">UnboundedQueue</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a4ed05702de2a1380547b9db09439ca86" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a4ed05702de2a1380547b9db09439ca86" kindref="member">UnboundedQueue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7c0a5f75842513dc8d24006b1b8a3eae" kindref="member">head_</ref>.store(node);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a80ad0d76375f5c6d12108e93eaecb315" kindref="member">tail_</ref>.store(node);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1af8a71c42222607d17ed82706ca166e08" kindref="member">size_</ref>.store(0);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue" kindref="compound">UnboundedQueue</ref>&amp;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a9121ebd82ee007ec07d9bc7ab201f00a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue" kindref="compound">UnboundedQueue</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a4ed05702de2a1380547b9db09439ca86" kindref="member">UnboundedQueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue" kindref="compound">UnboundedQueue</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1aa2801eb47524124080686b11a207a074" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1aa2801eb47524124080686b11a207a074" kindref="member">~UnboundedQueue</ref>()<sp/>{<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a4fae8d8e2b261d505a303086e3907bf6" kindref="member">Clear</ref>();<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a4fae8d8e2b261d505a303086e3907bf6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a4fae8d8e2b261d505a303086e3907bf6" kindref="member">Clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ite<sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7c0a5f75842513dc8d24006b1b8a3eae" kindref="member">head_</ref>.load();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref>*<sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ite<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>ite-&gt;<ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9431bfb8cc5ff8be4870a1456f36f8c3" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ite;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ite<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a449aa1a73e6a33cd8e1a5506fc2b2334" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a449aa1a73e6a33cd8e1a5506fc2b2334" kindref="member">Enqueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;data<sp/>=<sp/>element;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref>*<sp/>old_tail<sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a80ad0d76375f5c6d12108e93eaecb315" kindref="member">tail_</ref>.load();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a80ad0d76375f5c6d12108e93eaecb315" kindref="member">tail_</ref>.compare_exchange_strong(old_tail,<sp/>node))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_tail-&gt;<ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9431bfb8cc5ff8be4870a1456f36f8c3" kindref="member">next</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_tail-&gt;<ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1ab42a25d6b979341517561498ec6ef9f8" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1af8a71c42222607d17ed82706ca166e08" kindref="member">size_</ref>.fetch_add(1);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a59dfffdb79da27f745c2bf067190d360" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a59dfffdb79da27f745c2bf067190d360" kindref="member">Dequeue</ref>(T*<sp/>element)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref>*<sp/>old_head<sp/>=<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7c0a5f75842513dc8d24006b1b8a3eae" kindref="member">head_</ref>.load();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref>*<sp/>head_next<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head_next<sp/>=<sp/>old_head-&gt;<ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9431bfb8cc5ff8be4870a1456f36f8c3" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head_next<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7c0a5f75842513dc8d24006b1b8a3eae" kindref="member">head_</ref>.compare_exchange_strong(old_head,<sp/>head_next));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>*element<sp/>=<sp/>head_next-&gt;<ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9bc7d18c73019f923588336f91cba5df" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1af8a71c42222607d17ed82706ca166e08" kindref="member">size_</ref>.fetch_sub(1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>old_head-&gt;<ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1ab42a25d6b979341517561498ec6ef9f8" kindref="member">release</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a3eb8bea3e74d61667516d5984288a4d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a3eb8bea3e74d61667516d5984288a4d8" kindref="member">Size</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1af8a71c42222607d17ed82706ca166e08" kindref="member">size_</ref>.load();<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7ba37a0f3d6c5b6c7a9f8881af947635" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7ba37a0f3d6c5b6c7a9f8881af947635" kindref="member">Empty</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1af8a71c42222607d17ed82706ca166e08" kindref="member">size_</ref>.load()<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89" refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="90" refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9bc7d18c73019f923588336f91cba5df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9bc7d18c73019f923588336f91cba5df" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="91" refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a083b6184f84c240769267e0823b34d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;uint32_t&gt;<sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a083b6184f84c240769267e0823b34d89" kindref="member">ref_count</ref>;</highlight></codeline>
<codeline lineno="92" refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9431bfb8cc5ff8be4870a1456f36f8c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node" kindref="compound">Node</ref>*<sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a9431bfb8cc5ff8be4870a1456f36f8c3" kindref="member">next</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93" refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a801b24a5c1c8723fcb2fcb2234ede5ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a801b24a5c1c8723fcb2fcb2234ede5ed" kindref="member">Node</ref>()<sp/>{<sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a083b6184f84c240769267e0823b34d89" kindref="member">ref_count</ref>.store(2);<sp/>}</highlight></codeline>
<codeline lineno="94" refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1ab42a25d6b979341517561498ec6ef9f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1ab42a25d6b979341517561498ec6ef9f8" kindref="member">release</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a083b6184f84c240769267e0823b34d89" kindref="member">ref_count</ref>.fetch_sub(1);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structapollo_1_1cyber_1_1base_1_1UnboundedQueue_1_1Node_1a083b6184f84c240769267e0823b34d89" kindref="member">ref_count</ref>.load()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7c0a5f75842513dc8d24006b1b8a3eae" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;Node*&gt;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a7c0a5f75842513dc8d24006b1b8a3eae" kindref="member">head_</ref>;</highlight></codeline>
<codeline lineno="103" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a80ad0d76375f5c6d12108e93eaecb315" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;Node*&gt;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1a80ad0d76375f5c6d12108e93eaecb315" kindref="member">tail_</ref>;</highlight></codeline>
<codeline lineno="104" refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1af8a71c42222607d17ed82706ca166e08" refkind="member"><highlight class="normal"><sp/><sp/>std::atomic&lt;size_t&gt;<sp/><ref refid="classapollo_1_1cyber_1_1base_1_1UnboundedQueue_1af8a71c42222607d17ed82706ca166e08" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>base</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cyber</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>apollo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>CYBER_BASE_UNBOUNDED_QUEUE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/work/apollo-fork/apollo/cyber/base/unbounded_queue.h"/>
  </compounddef>
</doxygen>
